diff --git a/adverse-events/src/main/resources/application.conf b/adverse-events/src/main/resources/application.conf
index 03f1f91..1226234 100644
--- a/adverse-events/src/main/resources/application.conf
+++ b/adverse-events/src/main/resources/application.conf
@@ -1,20 +1,18 @@
 include "adverse-events-core.conf"
 
-server.port=8086
-
-gsrs.loopback.port=8081
+##################################################################
+# MAIN CONFIGURATION                                            ##
+##################################################################
 
 spring.application.name="adverse-events"
+server.servlet.context-path="/"${spring.application.name}
+ix.home=${spring.application.name}".ix"
+ix.home=${?IX_HOME}
+ix.home_substances="substances.ix"
+ix.home_substances=${?IX_HOME___SUBSTANCES}
 
-ix.home="ginas.ix"
-application.host="http://localhost:8081"
-#ix.home= ${?IX_HOME}
-#application.host= ${?GATEWAY_HOST}
-
-#this is what it registers under eureka
-eureka.instance.hostname="adverse-events"
-#turn off eureka for now
-eureka.client.enabled=false
+application.host="http://localhost:8080"
+application.host=${?APPLICATION_HOST}
 
 # Secure session off for dev, but if using HTTPS it's better to have it on
 gsrs.sessions.sessionSecure=false
@@ -23,51 +21,73 @@ gsrs.sessions.sessionSecure=false
 # or else need to implement it
 gsrs.substances.molwitch.enabled=false
 
-# need to reconsider this a bit
-substanceAPI.BaseUrl="http://localhost:8080/"
-
+# PUT YOUR PERSONAL EXTENSIONS AND ADDITIONS HERE
+#debug=true
+spring.main.allow-bean-definition-overriding=true
 
 ##################################################################
 # SPRING BOOT ACTUATOR SETTINGS FOR MICROSERVICE HEALTH CHECKS  ##
 ##################################################################
+
 # turn off rabbit mq check for now since we don't use it otherwise it wil say we ar down
 management.health.rabbit.enabled: false
 
-# PUT YOUR PERSONAL EXTENSIONS AND ADDITIONS HERE
-#debug=true
-spring.main.allow-bean-definition-overriding=true
+##################################################################
+# EUREKA SETTINGS                                               ##
+##################################################################
 
-#this is how HOCON does default values
-eureka.client.serviceUrl.defaultZone= "http://localhost:8761/eureka"
-eureka.client.serviceUrl.defaultZone= ${?EUREKA_SERVER}
+eureka.instance.hostname=${spring.application.name}
+eureka.client.serviceUrl.defaultZone="http://localhost:8761/eureka"
+eureka.client.serviceUrl.defaultZone=${?EUREKA_SERVICE_URL}
+#turn off eureka for now
+eureka.client.enabled=false
+eureka.client.enabled=${?EUREKA_CLIENT_ENABLED}
 
-ix.h2 {
-        base = ./${ix.home}/h2
-      }
+##################################################################
+# SUBSTANCES DATABASE CONNECTION                                ##
+##################################################################
+
+spring.datasource.url="jdbc:h2:file:"${ix.home_substances}"/h2/sprinxight;AUTO_SERVER=TRUE"
+spring.datasource.url=${?DB_URL}
+spring.datasource.url=${?DB_URL_SUBSTANCES}
+spring.datasource.username=${?DB_USERNAME}
+spring.datasource.password=${?DB_PASSWORD}
+spring.datasource.connectionTimeout=120000
+spring.datasource.connectionTimeout=${?DB_CONNECTION_TIMEOUT}
+spring.datasource.maximumPoolSize=${?DB_MAXIMUM_POOL_SIZE}
+spring.jpa.database-platform=${?DB_DIALECT}
+spring.jpa.hibernate.ddl-auto=none
+spring.jpa.hibernate.use-new-id-generator-mappings=${?DB_USE_NEW_ID_GENERATOR_MAPPINGS}
+spring.hibernate.show-sql=false
 
 ##################################################################
 # DATABASE CONNECTION                                           ##
 ##################################################################
 
-# H2 Database Connection
-spring.datasource.url="jdbc:h2:file:../substances/ginas.ix/h2/sprinxight;AUTO_SERVER=TRUE"
-spring.datasource.driverClassName=org.h2.Driver
-spring.datasource.connectionTimeout=120000
-spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
-# !!!!! IMPORTANT, KEEP TO "none" for non-memory databases such as ORACLE, MYSQL, etc.
-# Otherwise all the tables can be dropped or deleted. Can use update for H2.
-spring.jpa.hibernate.ddl-auto=update
+ix.h2 {
+        base = ./${ix.home}/h2
+      }
 
 adverseevent.datasource.url="jdbc:h2:"${ix.h2.base}"/appinxight;AUTO_SERVER=TRUE"
-adverseevent.datasource.driverClassName=org.h2.Driver
-adverseevent.datasource.username="sa"
-adverseevent.datasource.password=""
+adverseevent.datasource.url=${?DB_URL}
+adverseevent.datasource.url=${?DB_URL_ADVERSE_EVENTS}
+adverseevent.datasource.username=${?DB_USERNAME}
+adverseevent.datasource.password=${?DB_PASSWORD}
 adverseevent.datasource.connectionTimeout=120000
-adverseevent.jpa.database-platform=org.hibernate.dialect.H2Dialect
-# !!!!! IMPORTANT, KEEP TO "none" for non-memory databases such as ORACLE, MYSQL, etc.
-# Otherwise all the tables can be dropped or deleted. Can use update for H2.
+adverseevent.datasource.connectionTimeout=${?DB_CONNECTION_TIMEOUT}
+adverseevent.datasource.maximumPoolSize=${?DB_MAXIMUM_POOL_SIZE}
+adverseevent.jpa.database-platform=${?DB_DIALECT}
 adverseevent.jpa.hibernate.ddl-auto=update
+adverseevent.jpa.hibernate.ddl-auto=${?DB_DDL_AUTO}
+adverseevent.jpa.hibernate.use-new-id-generator-mappings=${?DB_USE_NEW_ID_GENERATOR_MAPPINGS}
+adverseevent.hibernate.show-sql=false
 
+##################################################################
+# API SETTINGS                                                  ##
+##################################################################
+
+substanceAPI.BaseUrl="http://localhost:8080/"
+substanceAPI.BaseUrl=${?API_URL}
 
 ##################################################################
 # CONFIGURATIONS VALIDATORS, PROCESSORS, EXPORT, etc            ##
@@ -76,11 +96,11 @@ adverseevent.jpa.hibernate.ddl-auto=update
 gsrs.entityprocessors = [
     {
         "entityClassName" = "gov.hhs.gsrs.adverseevents.adverseeventpt.models.AdverseEventPt",
-		"processor" = "gov.hhs.gsrs.adverseevents.adverseeventpt.processors.AdverseEventPtProcessor"
+        "processor" = "gov.hhs.gsrs.adverseevents.adverseeventpt.processors.AdverseEventPtProcessor"
     },
     {
         "entityClassName" = "gov.hhs.gsrs.adverseevents.adverseeventdme.models.AdverseEventDme",
-		"processor" = "gov.hhs.gsrs.adverseevents.adverseeventdme.processors.AdverseEventDmeProcessor"
+        "processor" = "gov.hhs.gsrs.adverseevents.adverseeventdme.processors.AdverseEventDmeProcessor"
     },
     {
         "entityClassName" = "gov.hhs.gsrs.adverseevents.adverseeventcvm.models.AdverseEventCvm",
@@ -120,4 +140,24 @@ gsrs.indexers.list=[
          "indexer" = "gov.hhs.gsrs.adverseevents.indexers.AEATCIndexValueMaker",
          "class" = "gov.hhs.gsrs.adverseevents.adverseeventdme.models.AdverseEventCvm"
     }
-]
\ No newline at end of file
+]
+
+##################################################################
+# LEGACY AUTHENTICATION                                         ##
+##################################################################
+
+ix.authentication.allownonauthenticated = ${?AUTH_ALLOW_NONAUTH}
+ix.authentication.autoregister = ${?AUTH_AUTOREGISTER}
+ix.authentication.autoregisteractive = ${?AUTH_AUTOREGISTERACTIVE}
+ix.authentication.sysadmin-email = ${?AUTH_SYSADMIN_EMAIL}
+ix.authentication.trustheader = ${?AUTH_TRUST_HEADER}
+ix.authentication.usernameheader = ${?AUTH_USERNAME_HEADER}
+ix.authentication.useremailheader = ${?AUTH_EMAIL_HEADER}
+ix.authentication.userrolesheader = ${?AUTH_ROLES_HEADER}
+
+##################################################################
+# CUSTOM CONFIGURATION                                          ##
+##################################################################
+
+include "conf/adverse-events.conf"
+include "adverse-events.conf"
diff --git a/adverse-events/src/main/webapp/META-INF/context.xml b/adverse-events/src/main/webapp/META-INF/context.xml
new file mode 100644
index 0000000..cbcfa99
--- /dev/null
+++ b/adverse-events/src/main/webapp/META-INF/context.xml
@@ -0,0 +1,6 @@
+<Context docBase="adverse-events">
+    <Valve className="org.apache.catalina.valves.RemoteAddrValve" allow="${gateway.allow.pattern:-\d+\.\d+\.\d+\.\d+}"/>
+    <Resources allowLinking="true" className="org.apache.catalina.webresources.StandardRoot">
+        <PreResources className="org.apache.catalina.webresources.DirResourceSet" base="${user.dir}/conf" internalPath="/" webAppMount="/WEB-INF/classes" />
+    </Resources>
+</Context>
diff --git a/applications/src/main/resources/application.conf b/applications/src/main/resources/application.conf
index 4b076ef..e1cb500 100644
--- a/applications/src/main/resources/application.conf
+++ b/applications/src/main/resources/application.conf
@@ -1,20 +1,18 @@
 include "applications-core.conf"
 
-server.port=8083
-
-gsrs.loopback.port=8081
+##################################################################
+# MAIN CONFIGURATION                                            ##
+##################################################################
 
 spring.application.name="applications"
+server.servlet.context-path="/"${spring.application.name}
+ix.home=${spring.application.name}".ix"
+ix.home=${?IX_HOME}
+ix.home_substances="substances.ix"
+ix.home_substances=${?IX_HOME___SUBSTANCES}
 
-ix.home="ginas.ix"
-application.host= "http://localhost:8081"
-#ix.home= ${?IX_HOME}
-#application.host= ${?GATEWAY_HOST}
-
-#this is what it registers under eureka
-eureka.instance.hostname="applications"
-#turn off eureka for now
-eureka.client.enabled=false
+application.host="http://localhost:8080"
+application.host=${?APPLICATION_HOST}
 
 # Secure session off for dev, but if using HTTPS it's better to have it on
 gsrs.sessions.sessionSecure=false
@@ -23,51 +21,73 @@ gsrs.sessions.sessionSecure=false
 # or else need to implement it
 gsrs.substances.molwitch.enabled=false
 
-# need to reconsider this a bit
-substanceAPI.BaseUrl="http://localhost:8080/"
-
+# PUT YOUR PERSONAL EXTENSIONS AND ADDITIONS HERE
+#debug=true
+spring.main.allow-bean-definition-overriding=true
 
 ##################################################################
 # SPRING BOOT ACTUATOR SETTINGS FOR MICROSERVICE HEALTH CHECKS  ##
 ##################################################################
+
 # turn off rabbit mq check for now since we don't use it otherwise it wil say we ar down
 management.health.rabbit.enabled: false
 
-# PUT YOUR PERSONAL EXTENSIONS AND ADDITIONS HERE
-#debug=true
-spring.main.allow-bean-definition-overriding=true
+##################################################################
+# EUREKA SETTINGS                                               ##
+##################################################################
 
-#this is how HOCON does default values
-eureka.client.serviceUrl.defaultZone= "http://localhost:8761/eureka"
-eureka.client.serviceUrl.defaultZone= ${?EUREKA_SERVER}
+eureka.instance.hostname=${spring.application.name}
+eureka.client.serviceUrl.defaultZone="http://localhost:8761/eureka"
+eureka.client.serviceUrl.defaultZone=${?EUREKA_SERVICE_URL}
+#turn off eureka for now
+eureka.client.enabled=false
+eureka.client.enabled=${?EUREKA_CLIENT_ENABLED}
 
-ix.h2 {
-        base = ./${ix.home}/h2
-      }
+##################################################################
+# SUBSTANCES DATABASE CONNECTION                                ##
+##################################################################
+
+spring.datasource.url="jdbc:h2:file:"${ix.home_substances}"/h2/sprinxight;AUTO_SERVER=TRUE"
+spring.datasource.url=${?DB_URL}
+spring.datasource.url=${?DB_URL_SUBSTANCES}
+spring.datasource.username=${?DB_USERNAME}
+spring.datasource.password=${?DB_PASSWORD}
+spring.datasource.connectionTimeout=120000
+spring.datasource.connectionTimeout=${?DB_CONNECTION_TIMEOUT}
+spring.datasource.maximumPoolSize=${?DB_MAXIMUM_POOL_SIZE}
+spring.jpa.database-platform=${?DB_DIALECT}
+spring.jpa.hibernate.ddl-auto=none
+spring.jpa.hibernate.use-new-id-generator-mappings=${?DB_USE_NEW_ID_GENERATOR_MAPPINGS}
+spring.hibernate.show-sql=false
 
 ##################################################################
 # DATABASE CONNECTION                                           ##
 ##################################################################
 
-# H2 Database Connection
-spring.datasource.url="jdbc:h2:file:../substances/ginas.ix/h2/sprinxight;AUTO_SERVER=TRUE"
-spring.datasource.driverClassName=org.h2.Driver
-spring.datasource.connectionTimeout=120000
-spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
-# !!!!! IMPORTANT, KEEP TO "none" for non-memory databases such as ORACLE, MYSQL, etc.
-# Otherwise all the tables can be dropped or deleted. Can use update for H2.
-spring.jpa.hibernate.ddl-auto=update
+ix.h2 {
+        base = ./${ix.home}/h2
+      }
 
 application.datasource.url="jdbc:h2:"${ix.h2.base}"/appinxight;AUTO_SERVER=TRUE"
-application.datasource.driverClassName=org.h2.Driver
-application.datasource.username="sa"
-application.datasource.password=""
+application.datasource.url=${?DB_URL}
+application.datasource.url=${?DB_URL_APPLICATIONS}
+application.datasource.username=${?DB_USERNAME}
+application.datasource.password=${?DB_PASSWORD}
 application.datasource.connectionTimeout=120000
-application.jpa.database-platform=org.hibernate.dialect.H2Dialect
-# !!!!! IMPORTANT, KEEP TO "none" for non-memory databases such as ORACLE, MYSQL, etc.
-# Otherwise all the tables can be dropped or deleted. Can use update for H2.
+application.datasource.connectionTimeout=${?DB_CONNECTION_TIMEOUT}
+application.datasource.maximumPoolSize=${?DB_MAXIMUM_POOL_SIZE}
+application.jpa.database-platform=${?DB_DIALECT}
 application.jpa.hibernate.ddl-auto=update
+application.jpa.hibernate.ddl-auto=${?DB_DDL_AUTO}
+application.jpa.hibernate.use-new-id-generator-mappings=${?DB_USE_NEW_ID_GENERATOR_MAPPINGS}
+application.hibernate.show-sql=false
 
+##################################################################
+# API SETTINGS                                                  ##
+##################################################################
+
+substanceAPI.BaseUrl="http://localhost:8080/"
+substanceAPI.BaseUrl=${?API_URL}
 
 ##################################################################
 # CONFIGURATIONS VALIDATORS, PROCESSORS, EXPORT, etc            ##
@@ -78,17 +98,17 @@ gsrs.validators.applications = [
         "validatorClass" = "gov.hhs.gsrs.application.application.validators.RequiredFieldNonNullValidator",
         "newObjClass" = "gov.hhs.gsrs.application.application.models.Application",
     }
-],
+]
 
 # NOT SURE IF WE NEED THIS OR NOT
 gsrs.entityprocessors = [
     {
         "class" = "gov.hhs.gsrs.application.application.models.Application",
-	    "processor" = "gov.hhs.gsrs.application.application.processors.ApplicationProcessor"
+        "processor" = "gov.hhs.gsrs.application.application.processors.ApplicationProcessor"
     },
     {
         "class" = "gov.hhs.gsrs.application.applicationall.models.ApplicationAll",
-    	"processor" = "gov.hhs.gsrs.application.applicationall.processors.ApplicationAllProcessor"
+        "processor" = "gov.hhs.gsrs.application.applicationall.processors.ApplicationAllProcessor"
     },
     {
         "class" = "gov.hhs.gsrs.application.applicationdarrts.models.ApplicationDarrts",
@@ -99,13 +119,12 @@ gsrs.entityprocessors = [
 # NEED THIS TO AVOID CVApi ERROR
 gsrs.entityProcessors=[]
 
-
 ix.ginas.export.factories.applications = [
-  "gov.hhs.gsrs.application.application.exporters.ApplicationExporterFactory"
+    "gov.hhs.gsrs.application.application.exporters.ApplicationExporterFactory"
 ]
 
 ix.ginas.export.factories.applicationsall = [
-  "gov.hhs.gsrs.application.applicationall.exporters.ApplicationAllExporterFactory"
+    "gov.hhs.gsrs.application.applicationall.exporters.ApplicationAllExporterFactory"
 ]
 
 gsrs.indexers.list=[
@@ -113,12 +132,28 @@ gsrs.indexers.list=[
         "indexer" = "gov.hhs.gsrs.application.application.indexers.ApplicationIngredientIndexValueMaker",
         "class" = "gov.hhs.gsrs.application.application.models.Application"
     },
-    {
-        "indexer" = "gov.hhs.gsrs.application.application.indexers.ApplicationClinicalTrialIndexValueMaker",
-        "class" = "gov.hhs.gsrs.application.application.models.Application"
-    },
     {
         "indexer" = "gov.hhs.gsrs.application.applicationall.indexers.ApplicationSubstanceIndexValueMaker",
         "class" = "gov.hhs.gsrs.application.applicationall.models.ApplicationAll"
     }
-]
\ No newline at end of file
+]
+
+##################################################################
+# LEGACY AUTHENTICATION                                         ##
+##################################################################
+
+ix.authentication.allownonauthenticated = ${?AUTH_ALLOW_NONAUTH}
+ix.authentication.autoregister = ${?AUTH_AUTOREGISTER}
+ix.authentication.autoregisteractive = ${?AUTH_AUTOREGISTERACTIVE}
+ix.authentication.sysadmin-email = ${?AUTH_SYSADMIN_EMAIL}
+ix.authentication.trustheader = ${?AUTH_TRUST_HEADER}
+ix.authentication.usernameheader = ${?AUTH_USERNAME_HEADER}
+ix.authentication.useremailheader = ${?AUTH_EMAIL_HEADER}
+ix.authentication.userrolesheader = ${?AUTH_ROLES_HEADER}
+
+##################################################################
+# CUSTOM CONFIGURATION                                          ##
+##################################################################
+
+include "conf/applications.conf"
+include "applications.conf"
diff --git a/applications/src/main/webapp/META-INF/context.xml b/applications/src/main/webapp/META-INF/context.xml
new file mode 100644
index 0000000..5986439
--- /dev/null
+++ b/applications/src/main/webapp/META-INF/context.xml
@@ -0,0 +1,6 @@
+<Context docBase="applications">
+    <Valve className="org.apache.catalina.valves.RemoteAddrValve" allow="${gateway.allow.pattern:-\d+\.\d+\.\d+\.\d+}"/>
+    <Resources allowLinking="true" className="org.apache.catalina.webresources.StandardRoot">
+        <PreResources className="org.apache.catalina.webresources.DirResourceSet" base="${user.dir}/conf" internalPath="/" webAppMount="/WEB-INF/classes" />
+    </Resources>
+</Context>
diff --git a/clinical-trials/src/main/resources/application.conf b/clinical-trials/src/main/resources/application.conf
index 978c718..d9c82f6 100644
--- a/clinical-trials/src/main/resources/application.conf
+++ b/clinical-trials/src/main/resources/application.conf
@@ -1,194 +1,187 @@
 include "gsrs-core.conf"
 
-ix.home="ginas.ix"
-application.host="http://localhost:8081"
-server.port=8089
+##################################################################
+# MAIN CONFIGURATION                                            ##
+##################################################################
 
 spring.application.name="clinical-trials"
+server.servlet.context-path="/"${spring.application.name}
+ix.home=${spring.application.name}".ix"
+ix.home=${?IX_HOME}
+ix.home_substances="substances.ix"
+ix.home_substances=${?IX_HOME___SUBSTANCES}
 
-# Set to false when testing locally
-gsrs.sessions.sessionSecure=false
-
-# ix.ginas.export.path=/path/to/exports
-
-gsrs.microservice.substances.api.baseURL="http://localhost:8081/"
+application.host="http://localhost:8080"
+application.host=${?APPLICATION_HOST}
 
-# This is needed for RestTemplate/Export things to work well
-gsrs.loopback.port=${server.port}
+# Secure session off for dev, but if using HTTPS it's better to have it on
+gsrs.sessions.sessionSecure=false
 
+# Since this currently extends substances, we must turn off molwitch
+# or else need to implement it
+gsrs.substances.molwitch.enabled=false
 
-# Should be same folder as substances' exports
-ix.ginas.export.path="../substances/exports"
+# PUT YOUR PERSONAL EXTENSIONS AND ADDITIONS HERE
+#debug=true
+spring.main.allow-bean-definition-overriding=true
 
-# This should be commented out when running locally.
-# errors when checking if a substance exists.
-# gsrs.microservice.substances.api.headers= {
-#                        "auth-username" ="admin",
-#                        "auth-key"="myKey"
-# }
+##################################################################
+# SPRING BOOT ACTUATOR SETTINGS FOR MICROSERVICE HEALTH CHECKS  ##
+##################################################################
 
-# Export CONFIG
-ix.ginas.export.settingsPresets.clinicaltrialsus= {
-  "ALL_DATA": {
-    "owner":"admin",
-   	"scrubberSettings":null
-   }
-}
+# turn off rabbit mq check for now since we don't use it otherwise it wil say we ar down
+management.health.rabbit.enabled: false
 
-# Export CONFIG
-ix.ginas.export.settingsPresets.clinicaltrialseurope= {
-  "ALL_DATA": {
-    "owner":"admin",
-   	"scrubberSettings":null
-   }
-}
+##################################################################
+# EUREKA SETTINGS                                               ##
+##################################################################
 
-# Turn off eureka for now
+eureka.instance.hostname=${spring.application.name}
+eureka.client.serviceUrl.defaultZone="http://localhost:8761/eureka"
+eureka.client.serviceUrl.defaultZone=${?EUREKA_SERVICE_URL}
+#turn off eureka for now
 eureka.client.enabled=false
+eureka.client.enabled=${?EUREKA_CLIENT_ENABLED}
 
 ##################################################################
-# SPRING BOOT ACTUATOR SETTINGS FOR MICROSERVICE HEALTH CHECKS  ##
+# SUBSTANCES DATABASE CONNECTION                                ##
 ##################################################################
-# turn off rabbit mq check for now since we don't use it otherwise it wil say we ar down
-management.health.rabbit.enabled: false
 
-# PUT YOUR PERSONAL EXTENSIONS AND ADDITIONS HERE
-#debug=true
-spring.main.allow-bean-definition-overriding=true
+spring.datasource.url="jdbc:h2:file:"${ix.home_substances}"/h2/sprinxight;AUTO_SERVER=TRUE"
+spring.datasource.url=${?DB_URL}
+spring.datasource.url=${?DB_URL_SUBSTANCES}
+spring.datasource.username=${?DB_USERNAME}
+spring.datasource.password=${?DB_PASSWORD}
+spring.datasource.connectionTimeout=120000
+spring.datasource.connectionTimeout=${?DB_CONNECTION_TIMEOUT}
+spring.datasource.maximumPoolSize=${?DB_MAXIMUM_POOL_SIZE}
+spring.jpa.database-platform=${?DB_DIALECT}
+spring.jpa.hibernate.ddl-auto=none
+spring.jpa.hibernate.use-new-id-generator-mappings=${?DB_USE_NEW_ID_GENERATOR_MAPPINGS}
+spring.hibernate.show-sql=false
 
-#this is how HOCON does default values
-eureka.client.serviceUrl.defaultZone= "http://localhost:8761/eureka"
+##################################################################
+# DATABASE CONNECTION                                           ##
+##################################################################
 
 ix.h2 {
         base = ./${ix.home}/h2
       }
 
+clinicaltrial.datasource.url="jdbc:h2:"${ix.h2.base}"/appinxight;AUTO_SERVER=TRUE"
+clinicaltrial.datasource.url=${?DB_URL}
+clinicaltrial.datasource.url=${?DB_URL_CLINICAL_TRIALS}
+clinicaltrial.datasource.username=${?DB_USERNAME}
+clinicaltrial.datasource.password=${?DB_PASSWORD}
+clinicaltrial.datasource.connectionTimeout=120000
+clinicaltrial.datasource.connectionTimeout=${?DB_CONNECTION_TIMEOUT}
+clinicaltrial.datasource.maximumPoolSize=${?DB_MAXIMUM_POOL_SIZE}
+clinicaltrial.jpa.database-platform=${?DB_DIALECT}
+clinicaltrial.jpa.hibernate.ddl-auto=update
+clinicaltrial.jpa.hibernate.ddl-auto=${?DB_DDL_AUTO}
+clinicaltrial.jpa.hibernate.use-new-id-generator-mappings=${?DB_USE_NEW_ID_GENERATOR_MAPPINGS}
+clinicaltrial.hibernate.show-sql=false
+
 ##################################################################
-# SPECIFIC CLINICAL TRIAL CONFIGS                               ##
+# API SETTINGS                                                  ##
 ##################################################################
 
-server.tomcat.relaxed-query-chars="<,>,[,\\,],^,`,{,|,}"
-server.tomcat.relaxed-path-chars="<,>,[,\\,],^,`,{,|,}"
+substanceAPI.BaseUrl="http://localhost:8080/"
+substanceAPI.BaseUrl=${?API_URL}
+gsrs.microservice.substances.api.baseURL=${substanceAPI.BaseUrl}
+gsrs.microservice.substances.api.baseURL=${?MS_API_URL}
+
+##################################################################
+# SPECIFIC CLINICAL TRIAL CONFIGS                               ##
+##################################################################
 
-mygsrs.substanceAPI.baseUrl = "http://localhost:8080/"
+mygsrs.substanceAPI.baseUrl = ${substanceAPI.BaseUrl}
 
 mygsrs.clinicaltrial.us.substance.linking.keyType.value = "UUID"
 mygsrs.clinicaltrial.us.substance.linking.keyType.agencyCodeValue = "BDNUM"
+mygsrs.clinicaltrial.us.substance.linking.keyType.agencyCodeValue = ${?CT_CODE_SYSTEM}
 
 mygsrs.clinicaltrial.us.ClinicalTrial.trialNumberPattern = "^NCT\\d+$"
 mygsrs.clinicaltrial.us.substanceKeyPatternRegex = "^[-0-9a-f]{36}$"
-mygsrs.clinicaltrial.us.agencySubstanceKeyTypeValue = "BDNUM";
+mygsrs.clinicaltrial.us.agencySubstanceKeyTypeValue = "BDNUM"
+mygsrs.clinicaltrial.us.agencySubstanceKeyTypeValue = ${?CT_CODE_SYSTEM}
 mygsrs.clinicaltrial.us.skipSubstanceValidation = false
 
 mygsrs.clinicaltrial.eu.ClinicalTrialEurope.trialNumberPattern = "^\\d{4}-\\d{6}-\\d{2}-[A-Z]{2}$"
 mygsrs.clinicaltrial.eu.substanceKeyPatternRegex = "^[-0-9a-f]{36}$"
-mygsrs.clinicaltrial.eu.agencySubstanceKeyTypeValue = "BDNUM";
+mygsrs.clinicaltrial.eu.agencySubstanceKeyTypeValue = "BDNUM"
+mygsrs.clinicaltrial.eu.agencySubstanceKeyTypeValue = ${?CT_CODE_SYSTEM}
 mygsrs.clinicaltrial.eu.skipSubstanceValidation = false
 
-mygsrs.clinicaltrial.cvUrl = application.host
-
-##################################################################
-# DATABASE CONNECTION                                           ##
-##################################################################
-
-# H2 Database Connections
-
-spring.datasource.url="jdbc:h2:file:../substances/ginas.ix/h2/sprinxight;AUTO_SERVER=TRUE"
-spring.datasource.driverClassName="org.h2.Driver"
-spring.datasource.connectionTimeout=120000
-spring.jpa.database-platform="org.hibernate.dialect.H2Dialect"
-spring.jpa.generate-ddl=false
-# Hibernate ddl auto (none, create, create-drop, validate, update)
-spring.jpa.hibernate.ddl-auto=update
-spring.hibernate.show-sql=false
-# Uncomment when NOT testing
-# spring.jpa.generate-ddl=false
-# spring.jpa.hibernate.ddl-auto=none
-# spring.hibernate.show-sql=false
-
-clinicaltrial.datasource.url="jdbc:h2:file:./ginas.ix/h2/ctdb;AUTO_SERVER=TRUE"
-clinicaltrial.datasource.driverClassName="org.h2.Driver"
-clinicaltrial.datasource.connectionTimeout=120000
-clinicaltrial.datasource.username="sa"
-clinicaltrial.datasource.password=""
-clinicaltrial.jpa.database-platform="org.hibernate.dialect.H2Dialect"
-clinicaltrial.jpa.generate-ddl=false
-# Hibernate ddl auto (none, create, create-drop, validate, update)
-clinicaltrial.jpa.hibernate.ddl-auto=update
-clinicaltrial.hibernate.show-sql=true
-# Uncomment when NOT testing
-# clinicaltrial.jpa.generate-ddl=false
-# clinicaltrial.jpa.hibernate.ddl-auto=none
-# clinicaltrial.hibernate.show-sql=false
-
+mygsrs.clinicaltrial.cvUrl = ${?application.host}
 
 ##################################################################
 # CONFIGURATIONS VALIDATORS, PROCESSORS, EXPORT, etc            ##
 ##################################################################
 
 gsrs.validators.clinicaltrialsus = [
-            {
-                "validatorClass" = "gov.hhs.gsrs.clinicaltrial.us.validators.GeneralTrialOnCreateValidator",
-                "newObjClass" = "gov.hhs.gsrs.clinicaltrial.us.models.ClinicalTrialUS",
-            },
-            {
-                "validatorClass" = "gov.hhs.gsrs.clinicaltrial.us.validators.GeneralTrialOnUpdateValidator",
-                "newObjClass" = "gov.hhs.gsrs.clinicaltrial.us.models.ClinicalTrialUS",
-            },
-            {
-                "validatorClass" = "gov.hhs.gsrs.clinicaltrial.us.validators.GeneralSubstancesValidator",
-                "newObjClass" = "gov.hhs.gsrs.clinicaltrial.us.models.ClinicalTrialUS",
-            },
-            {
-                "validatorClass" = "gov.hhs.gsrs.clinicaltrial.us.validators.SubstancesExistValidator",
-                "newObjClass" = "gov.hhs.gsrs.clinicaltrial.us.models.ClinicalTrialUS",
-            },
-            {
-                "validatorClass" = "gov.hhs.gsrs.clinicaltrial.us.validators.RequiredFieldNonNullValidator",
-                 "newObjClass" = "gov.hhs.gsrs.clinicaltrial.us.models.ClinicalTrialUS",
-            },
-        ]
+    {
+        "validatorClass" = "gov.hhs.gsrs.clinicaltrial.us.validators.GeneralTrialOnCreateValidator",
+        "newObjClass" = "gov.hhs.gsrs.clinicaltrial.us.models.ClinicalTrialUS",
+    },
+    {
+        "validatorClass" = "gov.hhs.gsrs.clinicaltrial.us.validators.GeneralTrialOnUpdateValidator",
+        "newObjClass" = "gov.hhs.gsrs.clinicaltrial.us.models.ClinicalTrialUS",
+    },
+    {
+        "validatorClass" = "gov.hhs.gsrs.clinicaltrial.us.validators.GeneralSubstancesValidator",
+        "newObjClass" = "gov.hhs.gsrs.clinicaltrial.us.models.ClinicalTrialUS",
+    },
+    {
+        "validatorClass" = "gov.hhs.gsrs.clinicaltrial.us.validators.SubstancesExistValidator",
+        "newObjClass" = "gov.hhs.gsrs.clinicaltrial.us.models.ClinicalTrialUS",
+    },
+    {
+        "validatorClass" = "gov.hhs.gsrs.clinicaltrial.us.validators.RequiredFieldNonNullValidator",
+         "newObjClass" = "gov.hhs.gsrs.clinicaltrial.us.models.ClinicalTrialUS",
+    },
+]
 
 gsrs.validators.clinicaltrialseurope = [
-            {
-                "validatorClass" = "gov.hhs.gsrs.clinicaltrial.europe.validators.GeneralTrialSetCreateUpdateDateOnUpdateIfNullValidator",
-                "newObjClass" = "gov.hhs.gsrs.clinicaltrial.europe.models.ClinicalTrialEurope",
-            },
-            {
-                "validatorClass" = "gov.hhs.gsrs.clinicaltrial.europe.validators.GeneralTrialSetCreateDateOnCreateIfNullValidator",
-                "newObjClass" = "gov.hhs.gsrs.clinicaltrial.europe.models.ClinicalTrialEurope",
-            },
-            {
-                "validatorClass" = "gov.hhs.gsrs.clinicaltrial.europe.validators.GeneralTrialOnCreateValidator",
-                "newObjClass" = "gov.hhs.gsrs.clinicaltrial.europe.models.ClinicalTrialEurope",
-            },
-            {
-                "validatorClass" = "gov.hhs.gsrs.clinicaltrial.europe.validators.GeneralTrialOnUpdateValidator",
-                "newObjClass" = "gov.hhs.gsrs.clinicaltrial.europe.models.ClinicalTrialEurope",
-            },
-            {
-                "validatorClass" = "gov.hhs.gsrs.clinicaltrial.europe.validators.GeneralSubstancesValidator",
-                "newObjClass" = "gov.hhs.gsrs.clinicaltrial.europe.models.ClinicalTrialEurope",
-            },
-            {
-                "validatorClass" = "gov.hhs.gsrs.clinicaltrial.europe.validators.SubstancesExistValidator",
-                "newObjClass" = "gov.hhs.gsrs.clinicaltrial.europe.models.ClinicalTrialEurope",
-            },
-            {
-                "validatorClass" = "gov.hhs.gsrs.clinicaltrial.europe.validators.RequiredFieldNonNullValidator",
-                 "newObjClass" = "gov.hhs.gsrs.clinicaltrial.europe.models.ClinicalTrialEurope",
-            },
-        ]
+    {
+        "validatorClass" = "gov.hhs.gsrs.clinicaltrial.europe.validators.GeneralTrialSetCreateUpdateDateOnUpdateIfNullValidator",
+        "newObjClass" = "gov.hhs.gsrs.clinicaltrial.europe.models.ClinicalTrialEurope",
+    },
+    {
+        "validatorClass" = "gov.hhs.gsrs.clinicaltrial.europe.validators.GeneralTrialSetCreateDateOnCreateIfNullValidator",
+        "newObjClass" = "gov.hhs.gsrs.clinicaltrial.europe.models.ClinicalTrialEurope",
+    },
+    {
+        "validatorClass" = "gov.hhs.gsrs.clinicaltrial.europe.validators.GeneralTrialOnCreateValidator",
+        "newObjClass" = "gov.hhs.gsrs.clinicaltrial.europe.models.ClinicalTrialEurope",
+    },
+    {
+        "validatorClass" = "gov.hhs.gsrs.clinicaltrial.europe.validators.GeneralTrialOnUpdateValidator",
+        "newObjClass" = "gov.hhs.gsrs.clinicaltrial.europe.models.ClinicalTrialEurope",
+    },
+    {
+        "validatorClass" = "gov.hhs.gsrs.clinicaltrial.europe.validators.GeneralSubstancesValidator",
+        "newObjClass" = "gov.hhs.gsrs.clinicaltrial.europe.models.ClinicalTrialEurope",
+    },
+    {
+        "validatorClass" = "gov.hhs.gsrs.clinicaltrial.europe.validators.SubstancesExistValidator",
+        "newObjClass" = "gov.hhs.gsrs.clinicaltrial.europe.models.ClinicalTrialEurope",
+    },
+    {
+        "validatorClass" = "gov.hhs.gsrs.clinicaltrial.europe.validators.RequiredFieldNonNullValidator",
+         "newObjClass" = "gov.hhs.gsrs.clinicaltrial.europe.models.ClinicalTrialEurope",
+    },
+]
 
 gsrs.entityProcessors = [
-{
+    {
         "class" = "gov.hhs.gsrs.clinicaltrial.us.models.ClinicalTrialUS",
-		"processor" = "gov.hhs.gsrs.clinicaltrial.us.entityProcessor.ClinicalTrialUSProcessor"
-},
-{
+        "processor" = "gov.hhs.gsrs.clinicaltrial.us.entityProcessor.ClinicalTrialUSProcessor"
+    },
+    {
         "class" = "gov.hhs.gsrs.clinicaltrial.europe.models.ClinicalTrialEurope",
-		"processor" = "gov.hhs.gsrs.clinicaltrial.europe.entityProcessor.ClinicalTrialEuropeProcessor"
-}
+        "processor" = "gov.hhs.gsrs.clinicaltrial.europe.entityProcessor.ClinicalTrialEuropeProcessor"
+    }
 ]
 
 # General Indexers
@@ -197,16 +190,53 @@ gsrs.indexers.list += {"indexer" = "gov.hhs.gsrs.clinicaltrial.europe.indexers.C
 
 # For cross indexing substance-browse to clinical trials
 gsrs.indexers.list += {
-  "indexer" = "gov.hhs.gsrs.clinicaltrial.us.indexers.ClinicalTrialUSEntityLinkIndexValueMaker"
+    "indexer" = "gov.hhs.gsrs.clinicaltrial.us.indexers.ClinicalTrialUSEntityLinkIndexValueMaker"
 }
 gsrs.indexers.list += {
-  "indexer" = "gov.hhs.gsrs.clinicaltrial.europe.indexers.ClinicalTrialEuropeEntityLinkIndexValueMaker"
+    "indexer" = "gov.hhs.gsrs.clinicaltrial.europe.indexers.ClinicalTrialEuropeEntityLinkIndexValueMaker"
 }
 
 # Factories
 ix.ginas.export.factories.clinicaltrialsus = [
-	"gov.hhs.gsrs.clinicaltrial.us.exporters.ClinicalTrialUSExporterFactory"
+    "gov.hhs.gsrs.clinicaltrial.us.exporters.ClinicalTrialUSExporterFactory"
 ]
-ix.ginas.export.factories.clinicaltrialseurope = [
-	"gov.hhs.gsrs.clinicaltrial.europe.exporters.ClinicalTrialEuropeExporterFactory"
+ix.ginas.export.factories.clinicaltrialseurope=[
+    "gov.hhs.gsrs.clinicaltrial.europe.exporters.ClinicalTrialEuropeExporterFactory"
 ]
+
+# Export CONFIG
+ix.ginas.export.settingsPresets.clinicaltrialsus= {
+    "ALL_DATA": {
+        "owner":"admin",
+        "scrubberSettings":null
+    }
+}
+
+# Export CONFIG
+ix.ginas.export.settingsPresets.clinicaltrialseurope= {
+    "ALL_DATA": {
+    "owner":"admin",
+        "scrubberSettings":null
+    }
+}
+
+
+##################################################################
+# LEGACY AUTHENTICATION                                         ##
+##################################################################
+
+ix.authentication.allownonauthenticated = ${?AUTH_ALLOW_NONAUTH}
+ix.authentication.autoregister = ${?AUTH_AUTOREGISTER}
+ix.authentication.autoregisteractive = ${?AUTH_AUTOREGISTERACTIVE}
+ix.authentication.sysadmin-email = ${?AUTH_SYSADMIN_EMAIL}
+ix.authentication.trustheader = ${?AUTH_TRUST_HEADER}
+ix.authentication.usernameheader = ${?AUTH_USERNAME_HEADER}
+ix.authentication.useremailheader = ${?AUTH_EMAIL_HEADER}
+ix.authentication.userrolesheader = ${?AUTH_ROLES_HEADER}
+
+##################################################################
+# CUSTOM CONFIGURATION                                          ##
+##################################################################
+
+include "conf/clinical-trials.conf"
+include "clinical-trials.conf"
diff --git a/clinical-trials/src/main/webapp/META-INF/context.xml b/clinical-trials/src/main/webapp/META-INF/context.xml
new file mode 100644
index 0000000..770465b
--- /dev/null
+++ b/clinical-trials/src/main/webapp/META-INF/context.xml
@@ -0,0 +1,6 @@
+<Context docBase="clinical-trials">
+    <Valve className="org.apache.catalina.valves.RemoteAddrValve" allow="${gateway.allow.pattern:-\d+\.\d+\.\d+\.\d+}"/>
+    <Resources allowLinking="true" className="org.apache.catalina.webresources.StandardRoot">
+        <PreResources className="org.apache.catalina.webresources.DirResourceSet" base="${user.dir}/conf" internalPath="/" webAppMount="/WEB-INF/classes" />
+    </Resources>
+</Context>
diff --git a/frontend/pom.xml b/frontend/pom.xml
index 6b29837..ceaee84 100644
--- a/frontend/pom.xml
+++ b/frontend/pom.xml
@@ -49,6 +49,11 @@
             <artifactId>spring-boot-starter-test</artifactId>
             <scope>test</scope>
         </dependency>
+        <dependency>
+            <groupId>com.github.zeldigas</groupId>
+            <artifactId>spring-hocon-property-source</artifactId>
+            <version>0.4.0</version>
+        </dependency>
     </dependencies>
 
     <build>
diff --git a/frontend/src/main/resources/META-INF/spring.factories b/frontend/src/main/resources/META-INF/spring.factories
new file mode 100644
index 0000000..2cd3eb0
--- /dev/null
+++ b/frontend/src/main/resources/META-INF/spring.factories
@@ -0,0 +1 @@
+org.springframework.boot.env.PropertySourceLoader=com.github.zeldigas.spring.env.HoconPropertySourceLoader
\ No newline at end of file
diff --git a/frontend/src/main/resources/application.conf b/frontend/src/main/resources/application.conf
new file mode 100644
index 0000000..3fa484b
--- /dev/null
+++ b/frontend/src/main/resources/application.conf
@@ -0,0 +1,30 @@
+##################################################################
+# MAIN CONFIGURATION                                            ##
+##################################################################
+
+spring.application.name="frontend"
+server.servlet.context-path="/"${spring.application.name}
+
+#this is the prefix path for the front end
+route.prefix="ginas/app/ui/"
+route.prefix=${?FRONTEND_ROUTE_PREFIX}
+gsrs.frontend.config.dir="classpath:/static/assets/data"
+gsrs.frontend.config.dir=${?FRONTEND_CONFIG_DIR}
+
+##################################################################
+# EUREKA SETTINGS                                               ##
+##################################################################
+
+eureka.instance.hostname=${spring.application.name}
+eureka.client.serviceUrl.defaultZone="http://localhost:8761/eureka"
+eureka.client.serviceUrl.defaultZone=${?EUREKA_SERVICE_URL}
+#turn off eureka for now
+eureka.client.enabled=false
+eureka.client.enabled=${?EUREKA_CLIENT_ENABLED}
+
+##################################################################
+# CUSTOM CONFIGURATION                                          ##
+##################################################################
+
+include "conf/frontend.conf"
+include "frontend.conf"
diff --git a/frontend/src/main/resources/application.properties b/frontend/src/main/resources/application.properties
deleted file mode 100644
index e8f98d5..0000000
--- a/frontend/src/main/resources/application.properties
+++ /dev/null
@@ -1,6 +0,0 @@
-server.port= 8082
-spring.application.name= frontend
-management.endpoint.health.show-details=always
-gsrs.frontend.prefix = ginas/app/ui/
-# Only used if using eureka client
-eureka.client.serviceUrl.defaultZone= ${EUREKA_SERVER:#{http://localhost:8761/eureka}}
diff --git a/frontend/src/main/webapp/META-INF/context.xml b/frontend/src/main/webapp/META-INF/context.xml
new file mode 100644
index 0000000..9e24fcd
--- /dev/null
+++ b/frontend/src/main/webapp/META-INF/context.xml
@@ -0,0 +1,6 @@
+<Context docBase="frontend">
+    <Valve className="org.apache.catalina.valves.RemoteAddrValve" allow="${gateway.allow.pattern:-\d+\.\d+\.\d+\.\d+}"/>
+    <Resources cacheMaxSize="40960" allowLinking="true" className="org.apache.catalina.webresources.StandardRoot">
+        <PreResources className="org.apache.catalina.webresources.DirResourceSet" base="${user.dir}/conf" internalPath="/" webAppMount="/WEB-INF/classes" />
+    </Resources>
+</Context>
diff --git a/gateway/pom.xml b/gateway/pom.xml
index b48526b..d854d25 100644
--- a/gateway/pom.xml
+++ b/gateway/pom.xml
@@ -62,6 +62,11 @@
                 </exclusion>
             </exclusions>
         </dependency>
+        <dependency>
+            <groupId>com.github.zeldigas</groupId>
+            <artifactId>spring-hocon-property-source</artifactId>
+            <version>0.4.0</version>
+        </dependency>
     </dependencies>
 
     <dependencyManagement>
diff --git a/gateway/src/main/resources/META-INF/spring.factories b/gateway/src/main/resources/META-INF/spring.factories
new file mode 100644
index 0000000..2cd3eb0
--- /dev/null
+++ b/gateway/src/main/resources/META-INF/spring.factories
@@ -0,0 +1 @@
+org.springframework.boot.env.PropertySourceLoader=com.github.zeldigas.spring.env.HoconPropertySourceLoader
\ No newline at end of file
diff --git a/gateway/src/main/resources/application.conf b/gateway/src/main/resources/application.conf
new file mode 100644
index 0000000..fc9a92f
--- /dev/null
+++ b/gateway/src/main/resources/application.conf
@@ -0,0 +1,325 @@
+##################################################################
+# MAIN CONFIGURATION                                            ##
+##################################################################
+
+spring.application.name="gateway"
+
+application.host="http://localhost:8080"
+application.host=${?APPLICATION_HOST}
+
+# PUT YOUR PERSONAL EXTENSIONS AND ADDITIONS HERE
+#debug=true
+
+gsrs.gateway.server.addHeaders = [
+    "Access-Control-Allow-Origin: *",
+    "Access-Control-Allow-Methods: POST, GET, PUT, PATCH, DELETE, OPTIONS"
+]
+
+##################################################################
+# SPRING BOOT ACTUATOR SETTINGS FOR MICROSERVICE HEALTH CHECKS  ##
+##################################################################
+
+# turn off rabbit mq check for now since we don't use it otherwise it wil say we ar down
+management.health.rabbit.enabled: false
+
+##################################################################
+# EUREKA SETTINGS                                               ##
+##################################################################
+
+eureka.instance.hostname=${spring.application.name}
+eureka.client.serviceUrl.defaultZone="http://localhost:8761/eureka"
+eureka.client.serviceUrl.defaultZone=${?EUREKA_SERVICE_URL}
+#turn off eureka for now
+eureka.client.enabled=false
+eureka.client.enabled=${?EUREKA_CLIENT_ENABLED}
+ribbon.eureka.enabled=false
+
+##################################################################
+# API SETTINGS                                                  ##
+##################################################################
+
+substanceAPI.BaseUrl="http://localhost:8080/"
+substanceAPI.BaseUrl=${?API_URL}
+gsrs.microservice.adverseevents.api.baseURL=${substanceAPI.BaseUrl}"adverse-events"
+gsrs.microservice.adverseevents.api.baseURL=${?MS_URL_ADVERSE_EVENTS}
+gsrs.microservice.applications.api.baseURL=${substanceAPI.BaseUrl}"applications"
+gsrs.microservice.applications.api.baseURL=${?MS_URL_APPLICATIONS}
+gsrs.microservice.clinicaltrialsus.api.baseURL=${substanceAPI.BaseUrl}"clinical-trials"
+gsrs.microservice.clinicaltrialsus.api.baseURL=${?MS_URL_CLINICAL_TRIALS}
+gsrs.microservice.clinicaltrialsus.api.baseURL=${?MS_URL_CLINICAL_TRIALS_US}
+gsrs.microservice.clinicaltrialseurope.api.baseURL=${substanceAPI.BaseUrl}"clinical-trials"
+gsrs.microservice.clinicaltrialseurope.api.baseURL=${?MS_URL_CLINICAL_TRIALS}
+gsrs.microservice.clinicaltrialseurope.api.baseURL=${?MS_URL_CLINICAL_TRIALS_EUROPE}
+gsrs.microservice.frontend.api.baseURL=${substanceAPI.BaseUrl}"frontend"
+gsrs.microservice.frontend.api.baseURL=${?MS_URL_FRONTEND}
+gsrs.microservice.impurities.api.baseURL=${substanceAPI.BaseUrl}"impurities"
+gsrs.microservice.impurities.api.baseURL=${?MS_URL_IMPURITIES}
+gsrs.microservice.invitropharmacology.api.baseURL=${substanceAPI.BaseUrl}"invitropharmacology"
+gsrs.microservice.invitropharmacology.api.baseURL=${?MS_URL_INVITRO_PHARMACOLOGY}
+gsrs.microservice.products.api.baseURL=${substanceAPI.BaseUrl}"products"
+gsrs.microservice.products.api.baseURL=${?MS_URL_PRODUCTS}
+gsrs.microservice.ssg4m.api.baseURL=${substanceAPI.BaseUrl}"ssg4m"
+gsrs.microservice.ssg4m.api.baseURL=${?MS_URL_SSG4M}
+gsrs.microservice.substances.api.baseURL=${substanceAPI.BaseUrl}"substances"
+gsrs.microservice.substances.api.baseURL=${?MS_URL_SUBSTANCES}
+
+##################################################################
+# ZUUL ROUTES CONFIGURATION                                     ##
+##################################################################
+
+zuul.routes = {
+    "00_ui_beta" = {
+        "path" = "/ginas/app/beta/**",
+        "url" = ${gsrs.microservice.frontend.api.baseURL}"/ginas/app/ui",
+        "serviceId" = "frontend_beta"
+    },
+    "01_ui_ui" = {
+        "path" = "/ginas/app/ui/**",
+        "url" = ${gsrs.microservice.frontend.api.baseURL}"/ginas/app/ui",
+        "serviceId" = "frontend"
+    },
+    #############################
+    #START applications section
+    #############################
+    "10_applications_core" = {
+        "path" = ${?API_BASE_PATH}"/api/v1/applications/**",
+        "url" = ${gsrs.microservice.applications.api.baseURL}"/api/v1/applications",
+        "serviceId" = "applications_core"
+    },
+    "11_applications_core_alt" = {
+        "path" = ${?API_BASE_PATH}"/api/v1/applications(**)/**",
+        "url" = ${gsrs.microservice.applications.api.baseURL}"/api/v1/applications",
+        "serviceId" = "applications_core_alt"
+    },
+    "12_applications_all" = {
+        "path" = ${?API_BASE_PATH}"/api/v1/applicationsall/**",
+        "url" = ${gsrs.microservice.applications.api.baseURL}"/api/v1/applicationsall",
+        "serviceId" = "applications_all"
+    },
+    "13_applications_all_alt" = {
+        "path" = ${?API_BASE_PATH}"/api/v1/applicationsall(**)/**",
+        "url" = ${gsrs.microservice.applications.api.baseURL}"/api/v1/applicationsall",
+        "serviceId" = "applications_all_alt"
+    },
+    "14_applications_darrts" = {
+        "path" = ${?API_BASE_PATH}"/api/v1/applicationsdarrts/**",
+        "url" = ${gsrs.microservice.applications.api.baseURL}"/api/v1/applicationsdarrts",
+        "serviceId" = "applications_darrts"
+    },
+    "15_applications_darrts_alt" = {
+        "path" = ${?API_BASE_PATH}"/api/v1/applicationsdarrts(**)/**",
+        "url" = ${gsrs.microservice.applications.api.baseURL}"/api/v1/applicationsdarrts",
+        "serviceId" = "applications_darrts_alt"
+    },
+    "16_applications_searchcount" = {
+        "path" = ${?API_BASE_PATH}"/api/v1/searchcounts/**",
+        "url" = ${gsrs.microservice.applications.api.baseURL}"/api/v1/searchcounts",
+        "serviceId" = "applications_searchcount"
+    },
+    "17_applications_searchcount_alt" = {
+        "path" = ${?API_BASE_PATH}"/api/v1/searchcounts(**)/**",
+        "url" = ${gsrs.microservice.applications.api.baseURL}"/api/v1/searchcounts",
+        "serviceId" = "applications_searchcount_alt"
+    },
+    #############################
+    #END applications section
+    #############################
+    #############################
+    #START products section
+    #############################
+    "20_products_core" = {
+        "path" = ${?API_BASE_PATH}"/api/v1/products/**",
+        "url" = ${gsrs.microservice.products.api.baseURL}"/api/v1/products",
+        "serviceId" = "products_core"
+    },
+    "21_products_core_alt" = {
+        "path" = ${?API_BASE_PATH}"/api/v1/products(**)/**",
+        "url" = ${gsrs.microservice.products.api.baseURL}"/api/v1/products",
+        "serviceId" = "products_core_alt"
+    },
+    #############################
+    #END products section
+    #############################
+    #############################
+    #START impurities section
+    #############################
+    "30_impurities_core" = {
+        "path" = ${?API_BASE_PATH}"/api/v1/impurities/**",
+        "url" = ${gsrs.microservice.impurities.api.baseURL}"/api/v1/impurities",
+        "serviceId" = "impurities_core"
+    },
+    "31_impurities_core_alt" = {
+        "path" = ${?API_BASE_PATH}"/api/v1/impurities(**)/**",
+        "url" = ${gsrs.microservice.impurities.api.baseURL}"/api/v1/impurities",
+        "serviceId" = "impurities_core_alt"
+    },
+    #############################
+    #END impurities section
+    #############################
+    #############################
+    #START invitro-pharmacology  section
+    #############################
+    "40_invitropharmacology_core" = {
+        "path" = ${?API_BASE_PATH}"/api/v1/invitropharmacology/**",
+        "url" = ${gsrs.microservice.invitropharmacology.api.baseURL}"/api/v1/invitropharmacology",
+        "serviceId" = "invitropharmacology_core"
+    },
+    "41_invitropharmacology_core_alt" = {
+        "path" = ${?API_BASE_PATH}"/api/v1/invitropharmacology(**)/**",
+        "url" = ${gsrs.microservice.invitropharmacology.api.baseURL}"/api/v1/invitropharmacology",
+        "serviceId" = "invitropharmacology_core_alt"
+    },
+    #############################
+    #END invitro-pharmacology  section
+    #############################
+    #############################
+    #START clinical_trials section
+    #############################
+    "50_clinical_trials_us" = {
+        "path" = ${?API_BASE_PATH}"/api/v1/clinicaltrialsus/**",
+        "url" = ${gsrs.microservice.clinicaltrialsus.api.baseURL}"/api/v1/clinicaltrialsus",
+        "serviceId" = "clinical_trials_us"
+    },
+    "51_clinical_trials_us_alt" = {
+        "path" = ${?API_BASE_PATH}"/api/v1/clinicaltrialsus(**)/**",
+        "url" = ${gsrs.microservice.clinicaltrialsus.api.baseURL}"/api/v1/clinicaltrialsus",
+        "serviceId" = "clinical_trials_us_alt"
+    },
+    "52_clinical_trials_europe" = {
+        "path" = ${?API_BASE_PATH}"/api/v1/clinicaltrialseurope/**",
+        "url" = ${gsrs.microservice.clinicaltrialseurope.api.baseURL}"/api/v1/clinicaltrialseurope",
+        "serviceId" = "clinical_trials_europe"
+    },
+    "53_clinical_trials_europe_alt" = {
+        "path" = ${?API_BASE_PATH}"/api/v1/clinicaltrialseurope(**)/**",
+        "url" = ${gsrs.microservice.clinicaltrialseurope.api.baseURL}"/api/v1/clinicaltrialseurope",
+        "serviceId" = "clinical_trials_europe_alt"
+    },
+    #############################
+    #END clinical_trials section
+    #############################
+    #############################
+    #START adverse-eventpt section
+    #############################
+    "60_adverseeventpt_core" = {
+       "path" = ${?API_BASE_PATH}"/api/v1/adverseeventpt/**",
+       "url" = ${gsrs.microservice.adverseevents.api.baseURL}"/api/v1/adverseeventpt",
+       "serviceId" = "adverseeventpt_core"
+    },
+    "61_adverseeventpt_core_alt" = {
+       "path" = ${?API_BASE_PATH}"/api/v1/adverseeventpt(**)/**",
+       "url" = ${gsrs.microservice.adverseevents.api.baseURL}"/api/v1/adverseeventpt",
+       "serviceId" = "adverseeventpt_core_alt"
+    },
+    "62_adverseeventdme_core" = {
+       "path" = ${?API_BASE_PATH}"/api/v1/adverseeventdme/**",
+       "url" = ${gsrs.microservice.adverseevents.api.baseURL}"/api/v1/adverseeventdme",
+       "serviceId" = "adverseeventdme_core"
+    },
+    "63_adverseeventdme_core_alt" = {
+       "path" = ${?API_BASE_PATH}"/api/v1/adverseeventdme(**)/**",
+       "url" = ${gsrs.microservice.adverseevents.api.baseURL}"/api/v1/adverseeventdme",
+       "serviceId" = "adverseeventdme_core_alt"
+    },
+    "64_adverseeventcvm_core" = {
+       "path" = ${?API_BASE_PATH}"/api/v1/adverseeventcvm/**",
+       "url" = ${gsrs.microservice.adverseevents.api.baseURL}"/api/v1/adverseeventcvm",
+       "serviceId" = "adverseeventcvm_core"
+    },
+    "65_adverseeventcvm_core_alt" = {
+       "path" = ${?API_BASE_PATH}"/api/v1/adverseeventcvm(**)/**",
+       "url" = ${gsrs.microservice.adverseevents.api.baseURL}"/api/v1/adverseeventcvm",
+       "serviceId" = "adverseeventcvm_core_alt"
+    },
+    #############################
+    #END adverse-eventpt section
+    #############################
+    #############################
+    #START SSG4 section
+    #############################
+    "70_ssg4m_core" = {
+        "path" = ${?API_BASE_PATH}"/api/v1/ssg4m/**",
+        "url" = ${gsrs.microservice.ssg4m.api.baseURL}"/ssg4m",
+        "serviceId" = "ssg4m_core"
+    },
+    "71_ssg4m_core_alt" = {
+        "path" = ${?API_BASE_PATH}"/api/v1/ssg4m(**)/**",
+        "url" = ${gsrs.microservice.ssg4m.api.baseURL}"/ssg4m",
+        "serviceId" = "ssg4m_core_alt"
+    },
+    #############################
+    #END SSG4 section
+    #############################
+    "90_substances_core" = {
+        "path" = ${?API_BASE_PATH}"/api/v1/**",
+        "url" = ${gsrs.microservice.substances.api.baseURL}"/api/v1",
+        "serviceId" = "substances_core"
+    },
+
+    "91_root" = {
+        "path" = "/",
+        "url" = ${gsrs.microservice.frontend.api.baseURL}"/ginas/app/ui",
+        "serviceId" = "root"
+    },
+    "92_tomcat_context_substances" = {
+        "path" = "/ginas/app/substances/**",
+        "url" = ${gsrs.microservice.substances.api.baseURL},
+        "serviceId" = "tomcat_context_substances",
+        "stripPrefix": true
+    },
+    "93_api_legacy_ginas_app" = {
+        "path" = "/ginas/app/**",
+        "url" = ${gsrs.microservice.substances.api.baseURL},
+        "serviceId" = "ginas_app",
+        "stripPrefix": true
+    },
+    "94_api_legacy_gsrs_app" = {
+        "path" = "/gsrs/app/**",
+        "url" = ${gsrs.microservice.substances.api.baseURL},
+        "serviceId" = "gsrs_app",
+        "stripPrefix": true
+    },
+    #fallback anything else goes to substances
+    "99_legacy" = {
+        "path" = "/**",
+        "url" = ${gsrs.microservice.substances.api.baseURL},
+        "serviceId" = "substances"
+    }
+}
+
+zuul.sensitiveHeaders = ""
+zuul.ignored-patterns = [
+    "/actuator/health"
+]
+
+# Make sure microservices are given enoough time to perform tasks.
+zuul.host.socket-timeout-millis=300000
+
+#Keeps + encoded characters encoded as +
+zuul.forceOriginalQueryStringEncoding=true
+
+#management.endpoints.web.exposure.include="*"
+management.endpoints.web.exposure.include="routes,filters"
+
+spring.servlet.multipart.max-file-size=512MB
+spring.servlet.multipart.max-request-size=512MB
+
+##################################################################
+# LEGACY AUTHENTICATION                                         ##
+##################################################################
+
+ix.authentication.allownonauthenticated = ${?AUTH_ALLOW_NONAUTH}
+ix.authentication.autoregister = ${?AUTH_AUTOREGISTER}
+ix.authentication.autoregisteractive = ${?AUTH_AUTOREGISTERACTIVE}
+ix.authentication.sysadmin-email = ${?AUTH_SYSADMIN_EMAIL}
+ix.authentication.trustheader = ${?AUTH_TRUST_HEADER}
+ix.authentication.usernameheader = ${?AUTH_USERNAME_HEADER}
+ix.authentication.useremailheader = ${?AUTH_EMAIL_HEADER}
+ix.authentication.userrolesheader = ${?AUTH_ROLES_HEADER}
+
+##################################################################
+# CUSTOM CONFIGURATION                                          ##
+##################################################################
+
+include "conf/gateway.conf"
+include "gateway.conf"
diff --git a/gateway/src/main/resources/application.yml b/gateway/src/main/resources/application.yml
deleted file mode 100644
index 3e17c23..0000000
--- a/gateway/src/main/resources/application.yml
+++ /dev/null
@@ -1,243 +0,0 @@
-
-api.base.path: ${API_BASE_PATH:/ginas/app}
-
-gsrs:
-  gateway:
-    server:
-      addHeaders:
-        - "Access-Control-Allow-Origin: *"
-        - "Access-Control-Allow-Methods: POST, GET, PUT, PATCH, DELETE, OPTIONS"
-
-eureka:
-  client:
-    registerWithEureka: true 
-    fetch-registry: true
-    serviceUrl:
-      defaultZone: ${EUREKA_SERVER:http://localhost:8761}
-
-spring:
-  application:
-    name: gateway
-
-debug: true
-
-zuul:
-  #this sets sensitiveHeaders to empty list so cookies and auth headers are passed through both ways
-  sensitiveHeaders:
-  routes:
-    ui_beta:
-      path: /ginas/app/beta/**
-      url: http://localhost:8082
-      serviceId: frontend
-      stripPrefix: false
-    ui_ui:
-      path: /ginas/app/ui/**
-      url: http://localhost:8082
-      serviceId: frontend
-      stripPrefix: false
-
-    #############################
-    #START adverse-events section
-    #############################
-    adverseeventpt:
-      path: ${api.base.path}/api/v1/adverseeventpt/**
-      url: http://localhost:8086/api/v1/adverseeventpt
-      serviceId: adverseeventpt
-    adverseeventpt_alt:
-      path: ${api.base.path}/api/v1/adverseeventpt(**)/**
-      url: http://localhost:8086/api/v1/adverseeventpt
-      serviceId: adverseeventpt
-    adverseeventdme:
-      path: ${api.base.path}/api/v1/adverseeventdme/**
-      url: http://localhost:8086/api/v1/adverseeventdme
-      serviceId: adverseeventdme
-    adverseeventdme_alt:
-      path: ${api.base.path}/api/v1/adverseeventdme(**)/**
-      url: http://localhost:8086/api/v1/adverseeventdme
-      serviceId: adverseeventdme
-    adverseeventcvm:
-      path: ${api.base.path}/api/v1/adverseeventcvm/**
-      url: http://localhost:8086/api/v1/adverseeventcvm
-      serviceId: adverseeventcvm
-    adverseeventcvm_alt:
-      path: ${api.base.path}/api/v1/adverseeventcvm(**)/**
-      url: http://localhost:8086/api/v1/adverseeventcvm
-      serviceId: adverseeventcvm
-    #############################
-    #END adverse-events section
-    #############################
-
-    #############################
-    #START applications section
-    #############################
-    applications_core:
-      path: ${api.base.path}/api/v1/applications/**
-      url: http://localhost:8083/api/v1/applications
-      serviceId: applications_core
-    applications_core_alt:
-      path: ${api.base.path}/api/v1/applications(**)/**
-      url: http://localhost:8083/api/v1/applications
-      serviceId: applications_core_alt
-    applications_all:
-      path: ${api.base.path}/api/v1/applicationsall/**
-      url: http://localhost:8083/api/v1/applicationsall
-      serviceId: applications_all
-    applications_all_alt:
-      path: ${api.base.path}/api/v1/applicationsall(**)/**
-      url: http://localhost:8083/api/v1/applicationsall
-      serviceId: applications_all_alt
-    applications_darrts:
-      path: ${api.base.path}/api/v1/applicationsdarrts/**
-      url: http://localhost:8083/api/v1/applicationsdarrts
-      serviceId: applications_darrts
-    applications_darrts_alt:
-      path: ${api.base.path}/api/v1/applicationsdarrts(**)/**
-      url: http://localhost:8083/api/v1/applicationsdarrts
-      serviceId: applications_darrts_alt
-    applications_searchcount:
-      path: ${api.base.path}/api/v1/searchcounts/**
-      url: http://localhost:8083/api/v1/searchcounts
-      serviceId: applications_searchcount
-    applications_searchcount_alt:
-      path: ${api.base.path}/api/v1/searchcounts(**)/**
-      url: http://localhost:8083/api/v1/searchcounts
-      serviceId: applications_searchcount
-    #############################
-    #END applications section
-    #############################
-
-    #############################
-    #START clinical-trials section
-    #############################
-    clinical_trials_us:
-      path: ${api.base.path}/api/v1/clinicaltrialsus/**
-      url: http://localhost:8089/api/v1/clinicaltrialsus
-      serviceId: clinical_trials_us
-    clinical_trials_us_alt:
-      path: ${api.base.path}/api/v1/clinicaltrialsus(**)/**
-      url: http://localhost:8089/api/v1/clinicaltrialsus
-      serviceId: clinical_trials_us
-    clinical_trials_europe:
-      path: ${api.base.path}/api/v1/clinicaltrialseurope/**
-      url: http://localhost:8089/api/v1/clinicaltrialseurope
-      serviceId: clinical_trials_europe
-    clinical_trials_europe_alt:
-      path: ${api.base.path}/api/v1/clinicaltrialseurope(**)/**
-      url: http://localhost:8089/api/v1/clinicaltrialseurope
-      serviceId: clinical_trials_europe  
-    #############################
-    #END clinical-trials section
-    #############################
-
-    #############################
-    #START impurities section
-    #############################
-    impurities_core:
-      path: ${api.base.path}/api/v1/impurities/**
-      url: http://localhost:8085/api/v1/impurities
-      serviceId: impurities_core
-    impurities_core_alt:
-      path: ${api.base.path}/api/v1/impurities(**)/**
-      url: http://localhost:8085/api/v1/impurities
-      serviceId: impurities_core
-    #############################
-    #END impurities section
-    #############################
-
-    #############################
-    #START invitro-pharmacology  section
-    #############################
-    invitropharmacology_core:
-      path: ${api.base.path}/api/v1/invitropharmacology/**
-      url: http://localhost:8090/api/v1/invitropharmacology
-      serviceId: invitropharmacology_core
-    #############################
-    #END invitro-pharmacology  section
-    #############################
-
-    #############################
-    #START products section
-    #############################
-    products_core:
-      path: ${api.base.path}/api/v1/products/**
-      url: http://localhost:8084/api/v1/products
-      serviceId: products_core
-    products_core_alt:
-      path: ${api.base.path}/api/v1/products(**)/**
-      url: http://localhost:8084/api/v1/products
-      serviceId: products_core
-    #############################
-    #END products section
-    #############################
-
-    #############################
-    #START ssg4m section
-    #############################
-    ssg4m_core:
-      path: ${api.base.path}/api/v1/ssg4m/**
-      url: http://localhost:8088/ssg4m
-      serviceId: ssg4m_core
-    ssg4m_core_alt:
-      path: ${api.base.path}/api/v1/ssg4m(**)/**
-      url: http://localhost:8088/ssg4m
-      serviceId: ssg4m_core_alt
-    #############################
-    #END ssg4m section
-    #############################
-
-    #############################
-    #START substances/legacy section
-    #############################
-    api_legacy_ginas_app:
-      path: /ginas/app/**
-      url: http://localhost:8080
-      stripPrefix: true
-    api_legacy_gsrs_app:
-      path: /gsrs/app/**
-      url: http://localhost:8080
-      stripPrefix: true
-      
-    #fallback anything else goes to substances
-    legacy:
-      path: /**
-      url: http://localhost:8080
-      serviceId: substances
-    #############################
-    #END substances/legacy section
-    #############################
-
-  ignored-patterns:
-      - "/actuator/health"
-
-ribbon:
-  eureka:
-    enabled: false
-
-server.port: 8081
-#management.endpoints.web.exposure.include: *
-management.endpoints.web.exposure.include: 'routes,filters'
-
-logging:
-  level:
-    org.springframework.cloud.gateway: DEBUG
-    reactor.netty.http.client: DEBUG
-
-spring.servlet.multipart.max-file-size:    100MB
-spring.servlet.multipart.max-request-size: 100MB
-
-eureka.client.enabled: false
-#Adding high timeout so that GSRS won't time out waiting for response from server.
-
-ix:
-  authentication:
-    allownonauthenticated: true
-    #set the administrator email here to include their contact info in the error message
-    #sysadmin-email: admin@example.com
-    trustheader: true
-    usernameheader: test-username
-
-# Make sure microservices are given enoough time to perform tasks. 
-zuul.host.socket-timeout-millis: 300000 
-
-#Keeps + encoded characters encoded as +
-zuul.forceOriginalQueryStringEncoding: true
diff --git a/gateway/src/main/webapp/META-INF/context.xml b/gateway/src/main/webapp/META-INF/context.xml
new file mode 100644
index 0000000..b24e9dd
--- /dev/null
+++ b/gateway/src/main/webapp/META-INF/context.xml
@@ -0,0 +1,5 @@
+<Context docBase="ROOT">
+    <Resources allowLinking="true" className="org.apache.catalina.webresources.StandardRoot">
+        <PreResources className="org.apache.catalina.webresources.DirResourceSet" base="${user.dir}/conf" internalPath="/" webAppMount="/WEB-INF/classes" />
+    </Resources>
+</Context>
diff --git a/impurities/src/main/resources/application.conf b/impurities/src/main/resources/application.conf
index ffabee9..7efacac 100644
--- a/impurities/src/main/resources/application.conf
+++ b/impurities/src/main/resources/application.conf
@@ -1,20 +1,18 @@
 include "impurities-core.conf"
 
-server.port=8085
-
-gsrs.loopback.port=8081
+##################################################################
+# MAIN CONFIGURATION                                            ##
+##################################################################
 
 spring.application.name="impurities"
+server.servlet.context-path="/"${spring.application.name}
+ix.home=${spring.application.name}".ix"
+ix.home=${?IX_HOME}
+ix.home_substances="substances.ix"
+ix.home_substances=${?IX_HOME___SUBSTANCES}
 
-ix.home="ginas.ix"
-application.host= "http://localhost:8081"
-#ix.home= ${?IX_HOME}
-#application.host= ${?GATEWAY_HOST}
-
-#this is what it registers under eureka
-eureka.instance.hostname="impurities"
-#turn off eureka for now
-eureka.client.enabled=false
+application.host="http://localhost:8080"
+application.host=${?APPLICATION_HOST}
 
 # Secure session off for dev, but if using HTTPS it's better to have it on
 gsrs.sessions.sessionSecure=false
@@ -23,51 +21,73 @@ gsrs.sessions.sessionSecure=false
 # or else need to implement it
 gsrs.substances.molwitch.enabled=false
 
-# need to reconsider this a bit
-substanceAPI.BaseUrl="http://localhost:8080/"
-
+# PUT YOUR PERSONAL EXTENSIONS AND ADDITIONS HERE
+#debug=true
+spring.main.allow-bean-definition-overriding=true
 
 ##################################################################
 # SPRING BOOT ACTUATOR SETTINGS FOR MICROSERVICE HEALTH CHECKS  ##
 ##################################################################
+
 # turn off rabbit mq check for now since we don't use it otherwise it wil say we ar down
 management.health.rabbit.enabled: false
 
-# PUT YOUR PERSONAL EXTENSIONS AND ADDITIONS HERE
-#debug=true
-spring.main.allow-bean-definition-overriding=true
+##################################################################
+# EUREKA SETTINGS                                               ##
+##################################################################
 
-#this is how HOCON does default values
-eureka.client.serviceUrl.defaultZone= "http://localhost:8761/eureka"
-eureka.client.serviceUrl.defaultZone= ${?EUREKA_SERVER}
+eureka.instance.hostname=${spring.application.name}
+eureka.client.serviceUrl.defaultZone="http://localhost:8761/eureka"
+eureka.client.serviceUrl.defaultZone=${?EUREKA_SERVICE_URL}
+#turn off eureka for now
+eureka.client.enabled=false
+eureka.client.enabled=${?EUREKA_CLIENT_ENABLED}
 
-ix.h2 {
-        base = ./${ix.home}/h2
-      }
+##################################################################
+# SUBSTANCES DATABASE CONNECTION                                ##
+##################################################################
+
+spring.datasource.url="jdbc:h2:file:"${ix.home_substances}"/h2/sprinxight;AUTO_SERVER=TRUE"
+spring.datasource.url=${?DB_URL}
+spring.datasource.url=${?DB_URL_SUBSTANCES}
+spring.datasource.username=${?DB_USERNAME}
+spring.datasource.password=${?DB_PASSWORD}
+spring.datasource.connectionTimeout=120000
+spring.datasource.connectionTimeout=${?DB_CONNECTION_TIMEOUT}
+spring.datasource.maximumPoolSize=${?DB_MAXIMUM_POOL_SIZE}
+spring.jpa.database-platform=${?DB_DIALECT}
+spring.jpa.hibernate.ddl-auto=none
+spring.jpa.hibernate.use-new-id-generator-mappings=${?DB_USE_NEW_ID_GENERATOR_MAPPINGS}
+spring.hibernate.show-sql=false
 
 ##################################################################
 # DATABASE CONNECTION                                           ##
 ##################################################################
 
-# H2 Database Connection
-spring.datasource.url="jdbc:h2:file:../substances/ginas.ix/h2/sprinxight;AUTO_SERVER=TRUE"
-spring.datasource.driverClassName=org.h2.Driver
-spring.datasource.connectionTimeout=120000
-spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
-# !!!!! IMPORTANT, KEEP TO "none" for non-memory databases such as ORACLE, MYSQL, etc.
-# Otherwise all the tables can be dropped or deleted. Can use update for H2.
-spring.jpa.hibernate.ddl-auto=update
+ix.h2 {
+        base = ./${ix.home}/h2
+      }
 
 impurities.datasource.url="jdbc:h2:"${ix.h2.base}"/appinxight;AUTO_SERVER=TRUE"
-impurities.datasource.driverClassName=org.h2.Driver
-impurities.datasource.username="sa"
-impurities.datasource.password=""
+impurities.datasource.url=${?DB_URL}
+impurities.datasource.url=${?DB_URL_IMPURITIES}
+impurities.datasource.username=${?DB_USERNAME}
+impurities.datasource.password=${?DB_PASSWORD}
 impurities.datasource.connectionTimeout=120000
-impurities.jpa.database-platform=org.hibernate.dialect.H2Dialect
-# !!!!! IMPORTANT, KEEP TO "none" for non-memory databases such as ORACLE, MYSQL, etc.
-# Otherwise all the tables can be dropped or deleted. Can use update for H2.
+impurities.datasource.connectionTimeout=${?DB_CONNECTION_TIMEOUT}
+impurities.datasource.maximumPoolSize=${?DB_MAXIMUM_POOL_SIZE}
+impurities.jpa.database-platform=${?DB_DIALECT}
 impurities.jpa.hibernate.ddl-auto=update
+impurities.jpa.hibernate.ddl-auto=${?DB_DDL_AUTO}
+impurities.jpa.hibernate.use-new-id-generator-mappings=${?DB_USE_NEW_ID_GENERATOR_MAPPINGS}
+impurities.hibernate.show-sql=false
 
+##################################################################
+# API SETTINGS                                                  ##
+##################################################################
+
+substanceAPI.BaseUrl="http://localhost:8080/"
+substanceAPI.BaseUrl=${?API_URL}
 
 ##################################################################
 # CONFIGURATIONS VALIDATORS, PROCESSORS, EXPORT, etc            ##
@@ -84,14 +104,33 @@ gsrs.validators.impurities = [
 gsrs.entityprocessors = [
     {
         "class" = "gov.hhs.gsrs.impurities.Impurities",
-	    "processor" = "gov.hhs.gsrs.impurities.processors.ImpuritiesProcessor"
+        "processor" = "gov.hhs.gsrs.impurities.processors.ImpuritiesProcessor"
     }
 ]
 
 # NEED THIS TO AVOID CVApi ERROR
-gsrs.entityprocessors = []
-
+gsrs.entityProcessors = []
 
 ix.ginas.export.factories.impurities = [
     "gov.hhs.gsrs.impurities.exporters.ImpuritiesExporterFactory"
 ]
+
+##################################################################
+# LEGACY AUTHENTICATION                                         ##
+##################################################################
+
+ix.authentication.allownonauthenticated = ${?AUTH_ALLOW_NONAUTH}
+ix.authentication.autoregister = ${?AUTH_AUTOREGISTER}
+ix.authentication.autoregisteractive = ${?AUTH_AUTOREGISTERACTIVE}
+ix.authentication.sysadmin-email = ${?AUTH_SYSADMIN_EMAIL}
+ix.authentication.trustheader = ${?AUTH_TRUST_HEADER}
+ix.authentication.usernameheader = ${?AUTH_USERNAME_HEADER}
+ix.authentication.useremailheader = ${?AUTH_EMAIL_HEADER}
+ix.authentication.userrolesheader = ${?AUTH_ROLES_HEADER}
+
+##################################################################
+# CUSTOM CONFIGURATION                                          ##
+##################################################################
+
+include "conf/impurities.conf"
+include "impurities.conf"
diff --git a/impurities/src/main/webapp/META-INF/context.xml b/impurities/src/main/webapp/META-INF/context.xml
new file mode 100644
index 0000000..c63deb3
--- /dev/null
+++ b/impurities/src/main/webapp/META-INF/context.xml
@@ -0,0 +1,6 @@
+<Context docBase="impurities">
+    <Valve className="org.apache.catalina.valves.RemoteAddrValve" allow="${gateway.allow.pattern:-\d+\.\d+\.\d+\.\d+}"/>
+    <Resources allowLinking="true" className="org.apache.catalina.webresources.StandardRoot">
+        <PreResources className="org.apache.catalina.webresources.DirResourceSet" base="${user.dir}/conf" internalPath="/" webAppMount="/WEB-INF/classes" />
+    </Resources>
+</Context>
diff --git a/invitro-pharmacology/src/main/resources/application.conf b/invitro-pharmacology/src/main/resources/application.conf
index 105ef90..3e98780 100644
--- a/invitro-pharmacology/src/main/resources/application.conf
+++ b/invitro-pharmacology/src/main/resources/application.conf
@@ -1,82 +1,109 @@
 include "invitro-pharmacology-core.conf"
 
-server.port=8090
-
-ix.home="ginas.ix"
+##################################################################
+# MAIN CONFIGURATION                                            ##
+##################################################################
 
-application.host= ${?GATEWAY_HOST}
 spring.application.name="invitro-pharmacology"
-#this is what it registers under eureka
-eureka.instance.hostname="invitro-pharmacology"
+server.servlet.context-path="/"${spring.application.name}
+ix.home=${spring.application.name}".ix"
+ix.home=${?IX_HOME}
+ix.home_substances="substances.ix"
+ix.home_substances=${?IX_HOME___SUBSTANCES}
 
-#turn off eureka for now
-eureka.client.enabled=false
-eureka.client.enable=false
+application.host="http://localhost:8080"
+application.host=${?APPLICATION_HOST}
 
+# Secure session off for dev, but if using HTTPS it's better to have it on
+gsrs.sessions.sessionSecure=false
+
+# Since this currently extends substances, we must turn off molwitch
+# or else need to implement it
+gsrs.substances.molwitch.enabled=false
+
+# PUT YOUR PERSONAL EXTENSIONS AND ADDITIONS HERE
+#debug=true
+spring.main.allow-bean-definition-overriding=true
 
 ##################################################################
 # SPRING BOOT ACTUATOR SETTINGS FOR MICROSERVICE HEALTH CHECKS  ##
 ##################################################################
+
 # turn off rabbit mq check for now since we don't use it otherwise it wil say we ar down
 management.health.rabbit.enabled: false
 
-# PUT YOUR PERSONAL EXTENSIONS AND ADDITIONS HERE
-#debug=true
-spring.main.allow-bean-definition-overriding=true
+##################################################################
+# EUREKA SETTINGS                                               ##
+##################################################################
 
-#this is how HOCON does default values
-eureka.client.serviceUrl.defaultZone= "http://localhost:8761/eureka"
-eureka.client.serviceUrl.defaultZone= ${?EUREKA_SERVER}
+eureka.instance.hostname=${spring.application.name}
+eureka.client.serviceUrl.defaultZone="http://localhost:8761/eureka"
+eureka.client.serviceUrl.defaultZone=${?EUREKA_SERVICE_URL}
+#turn off eureka for now
+eureka.client.enabled=false
+eureka.client.enabled=${?EUREKA_CLIENT_ENABLED}
 
-ix.h2 {
-        base = ./${ix.home}/h2
-      }
+##################################################################
+# SUBSTANCE DATABASE CONNECTION                                 ##
+##################################################################
 
+spring.datasource.url="jdbc:h2:file:"${ix.home_substances}"/h2/sprinxight;AUTO_SERVER=TRUE"
+spring.datasource.url=${?DB_URL}
+spring.datasource.url=${?DB_URL_SUBSTANCES}
+spring.datasource.username=${?DB_USERNAME}
+spring.datasource.password=${?DB_PASSWORD}
+spring.datasource.connectionTimeout=120000
+spring.datasource.connectionTimeout=${?DB_CONNECTION_TIMEOUT}
+spring.datasource.maximumPoolSize=${?DB_MAXIMUM_POOL_SIZE}
+spring.jpa.database-platform=${?DB_DIALECT}
+spring.jpa.hibernate.ddl-auto=none
+spring.jpa.hibernate.use-new-id-generator-mappings=${?DB_USE_NEW_ID_GENERATOR_MAPPINGS}
+spring.hibernate.show-sql=false
 
 ##################################################################
 # DATABASE CONNECTION                                           ##
 ##################################################################
 
-# H2 Database Connection BEGIN *******
-spring.datasource.url="jdbc:h2:file:../substances/ginas.ix/h2/sprinxight;AUTO_SERVER=TRUE"
-spring.datasource.driverClassName=org.h2.Driver
-spring.datasource.connectionTimeout=120000
-spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
-spring.jpa.hibernate.ddl-auto=none
+ix.h2 {
+        base = ./${ix.home}/h2
+      }
 
 invitropharmacology.datasource.url="jdbc:h2:"${ix.h2.base}"/appinxight;AUTO_SERVER=TRUE"
-invitropharmacology.datasource.driverClassName=org.h2.Driver
+invitropharmacology.datasource.url=${?DB_URL}
+invitropharmacology.datasource.url=${?DB_URL_INVITRO_PHARMACOLOGY}
+invitropharmacology.datasource.username=${?DB_USERNAME}
+invitropharmacology.datasource.password=${?DB_PASSWORD}
 invitropharmacology.datasource.connectionTimeout=120000
-invitropharmacology.jpa.database-platform=org.hibernate.dialect.H2Dialect
+invitropharmacology.datasource.connectionTimeout=${?DB_CONNECTION_TIMEOUT}
+invitropharmacology.datasource.maximumPoolSize=${?DB_MAXIMUM_POOL_SIZE}
+invitropharmacology.jpa.database-platform=${?DB_DIALECT}
 invitropharmacology.jpa.hibernate.ddl-auto=update
-# H2 Database Connection END ********
-
-# !!!!! IMPORTANT, KEEP TO "none" for non-memory databases such as ORACLE, MYSQL, etc.
-# Otherwise all the tables can be dropped or deleted
-# spring.jpa.hibernate.ddl-auto=none
-# invitropharmacology.jpa.hibernate.ddl-auto=none
+invitropharmacology.jpa.hibernate.ddl-auto=${?DB_DDL_AUTO}
+invitropharmacology.jpa.hibernate.use-new-id-generator-mappings=${?DB_USE_NEW_ID_GENERATOR_MAPPINGS}
+invitropharmacology.hibernate.show-sql=false
 
 ##################################################################
-# SUBSTANCE API CONFIGURATION BEGIN                             ##
+# API SETTINGS                                                  ##
 ##################################################################
 
 # need to reconsider this a bit
 substanceAPI.BaseUrl="http://localhost:8080/"
+substanceAPI.BaseUrl=${?API_URL}
 
 # NEED THIS for Substance API, Substance dependencies gsrs-module-substances-api
-gsrs.microservice.substances.api.baseURL="http://localhost:8081/"
+gsrs.microservice.substances.api.baseURL=${substanceAPI.BaseUrl}"substances"
+gsrs.microservice.substances.api.baseURL=${?MS_URL_SUBSTANCES}
 
 # Substance API Substance Key Type, choose one (UUID, APPROVAL_ID, or BDNUM)
 substance.linking.keyType.invitroPharmacologyKeyType="UUID"
 
-# Choose one (api or entitymanager) to use Substance API or Substance Entity Manager for InvitroPharmacologyIndexValueMaker
-substance.invitropharmacology.ivm.substancekey.resolver.touse="entitymanager"
+# Choose one (api or entitymanager) to use Substance API or Substance Entity Manager for ProductSubstanceIndexValueMaker
+substance.product.ivm.substancekey.resolver.touse="entitymanager"
 
-# ***** SUBSTANCE API CONFIGURATION END ******
 
-##########################################################################
-# CONFIGURATIONS VALIDATORS, PROCESSORS, EXPORTERS, INDEXERS, etc       ##
-##########################################################################
+##################################################################
+# CONFIGURATIONS VALIDATORS, PROCESSORS, INDEXERS, EXPORT, etc  ##
+##################################################################
 
 gsrs.validators.invitropharmacology = [
     {
@@ -93,20 +120,18 @@ gsrs.validators.invitropharmacology = [
 gsrs.entityprocessors = [
     {
         "class" = "gov.hhs.gsrs.invitropharmacology.models.InvitroPharmacology",
-	    "processor" = "gov.hhs.gsrs.invitropharmacology.processors.InvitroPharmacologyProcessor"
+        "processor" = "gov.hhs.gsrs.invitropharmacology.processors.InvitroPharmacologyProcessor"
     }
 ]
 
 # NEED THIS TO AVOID CVApi ERROR
-gsrs.entityprocessors = []
+gsrs.entityProcessors = []
 
-# EXPORTERS
 ix.ginas.export.factories.invitropharmacology = [
     "gov.hhs.gsrs.invitropharmacology.exporters.InvitroPharmacologyExporterFactory",
     "gov.hhs.gsrs.invitropharmacology.exporters.InvitroPharmacologyTextExporterFactory"
 ]
 
-# INDEXERS
 gsrs.indexers.list=[
     {
         "indexer" = "gov.hhs.gsrs.invitropharmacology.indexers.InvitroPharmacologyIndexValueMaker",
@@ -114,3 +139,22 @@ gsrs.indexers.list=[
     }
 ]
 
+##################################################################
+# LEGACY AUTHENTICATION                                         ##
+##################################################################
+
+ix.authentication.allownonauthenticated = ${?AUTH_ALLOW_NONAUTH}
+ix.authentication.autoregister = ${?AUTH_AUTOREGISTER}
+ix.authentication.autoregisteractive = ${?AUTH_AUTOREGISTERACTIVE}
+ix.authentication.sysadmin-email = ${?AUTH_SYSADMIN_EMAIL}
+ix.authentication.trustheader = ${?AUTH_TRUST_HEADER}
+ix.authentication.usernameheader = ${?AUTH_USERNAME_HEADER}
+ix.authentication.useremailheader = ${?AUTH_EMAIL_HEADER}
+ix.authentication.userrolesheader = ${?AUTH_ROLES_HEADER}
+
+##################################################################
+# CUSTOM CONFIGURATION                                          ##
+##################################################################
+
+include "conf/invitro-pharmacology.conf"
+include "invitro-pharmacology.conf"
diff --git a/invitro-pharmacology/src/main/webapp/META-INF/context.xml b/invitro-pharmacology/src/main/webapp/META-INF/context.xml
new file mode 100644
index 0000000..947d4ef
--- /dev/null
+++ b/invitro-pharmacology/src/main/webapp/META-INF/context.xml
@@ -0,0 +1,6 @@
+<Context docBase="invitro-pharmacology">
+    <Valve className="org.apache.catalina.valves.RemoteAddrValve" allow="${gateway.allow.pattern:-\d+\.\d+\.\d+\.\d+}"/>
+    <Resources allowLinking="true" className="org.apache.catalina.webresources.StandardRoot">
+        <PreResources className="org.apache.catalina.webresources.DirResourceSet" base="${user.dir}/conf" internalPath="/" webAppMount="/WEB-INF/classes" />
+    </Resources>
+</Context>
diff --git a/products/src/main/resources/application.conf b/products/src/main/resources/application.conf
index 2b27d22..a662d5f 100644
--- a/products/src/main/resources/application.conf
+++ b/products/src/main/resources/application.conf
@@ -1,20 +1,18 @@
 include "products-core.conf"
 
-server.port=8084
-
-gsrs.loopback.port=8081
+##################################################################
+# MAIN CONFIGURATION                                            ##
+##################################################################
 
 spring.application.name="products"
+server.servlet.context-path="/"${spring.application.name}
+ix.home=${spring.application.name}".ix"
+ix.home=${?IX_HOME}
+ix.home_substances="substances.ix"
+ix.home_substances=${?IX_HOME___SUBSTANCES}
 
-ix.home="ginas.ix"
-application.host= "http://localhost:8081"
-#ix.home= ${?IX_HOME}
-#application.host= ${?GATEWAY_HOST}
-
-#this is what it registers under eureka
-eureka.instance.hostname="products"
-#turn off eureka for now
-eureka.client.enabled=false
+application.host="http://localhost:8080"
+application.host=${?APPLICATION_HOST}
 
 # Secure session off for dev, but if using HTTPS it's better to have it on
 gsrs.sessions.sessionSecure=false
@@ -23,57 +21,78 @@ gsrs.sessions.sessionSecure=false
 # or else need to implement it
 gsrs.substances.molwitch.enabled=false
 
+# PUT YOUR PERSONAL EXTENSIONS AND ADDITIONS HERE
+#debug=true
+spring.main.allow-bean-definition-overriding=true
+
 ##################################################################
 # SPRING BOOT ACTUATOR SETTINGS FOR MICROSERVICE HEALTH CHECKS  ##
 ##################################################################
+
 # turn off rabbit mq check for now since we don't use it otherwise it wil say we ar down
 management.health.rabbit.enabled: false
 
-# PUT YOUR PERSONAL EXTENSIONS AND ADDITIONS HERE
-#debug=true
-spring.main.allow-bean-definition-overriding=true
-
-#this is how HOCON does default values
-eureka.client.serviceUrl.defaultZone= "http://localhost:8761/eureka"
+##################################################################
+# EUREKA SETTINGS                                               ##
+##################################################################
 
-ix.h2 {
-        base = ./${ix.home}/h2
-      }
+eureka.instance.hostname=${spring.application.name}
+eureka.client.serviceUrl.defaultZone="http://localhost:8761/eureka"
+eureka.client.serviceUrl.defaultZone=${?EUREKA_SERVICE_URL}
+#turn off eureka for now
+eureka.client.enabled=false
+eureka.client.enabled=${?EUREKA_CLIENT_ENABLED}
 
 ##################################################################
-# DATABASE CONNECTION                                           ##
+# SUBSTANCE DATABASE CONNECTION                                 ##
 ##################################################################
 
-# H2 Database Connection
-spring.datasource.url="jdbc:h2:file:../substances/ginas.ix/h2/sprinxight;AUTO_SERVER=TRUE"
-spring.datasource.driverClassName=org.h2.Driver
+spring.datasource.url="jdbc:h2:file:"${ix.home_substances}"/h2/sprinxight;AUTO_SERVER=TRUE"
+spring.datasource.url=${?DB_URL}
+spring.datasource.url=${?DB_URL_SUBSTANCES}
+spring.datasource.username=${?DB_USERNAME}
+spring.datasource.password=${?DB_PASSWORD}
 spring.datasource.connectionTimeout=120000
-spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
-# !!!!! IMPORTANT, KEEP TO "none" for non-memory databases such as ORACLE, MYSQL, etc.
-# Otherwise all the tables can be dropped or deleted. Can use update for H2.
-spring.jpa.hibernate.ddl-auto=update
+spring.datasource.connectionTimeout=${?DB_CONNECTION_TIMEOUT}
+spring.datasource.maximumPoolSize=${?DB_MAXIMUM_POOL_SIZE}
+spring.jpa.database-platform=${?DB_DIALECT}
+spring.jpa.hibernate.ddl-auto=none
+spring.jpa.hibernate.use-new-id-generator-mappings=${?DB_USE_NEW_ID_GENERATOR_MAPPINGS}
+spring.hibernate.show-sql=false
+
+##################################################################
+# DATABASE CONNECTION                                           ##
+##################################################################
 
+ix.h2 {
+        base = ./${ix.home}/h2
+      }
 
 product.datasource.url="jdbc:h2:"${ix.h2.base}"/appinxight;AUTO_SERVER=TRUE"
-product.datasource.driverClassName=org.h2.Driver
+product.datasource.url=${?DB_URL}
+product.datasource.url=${?DB_URL_PRODUCTS}
+product.datasource.username=${?DB_USERNAME}
+product.datasource.password=${?DB_PASSWORD}
 product.datasource.connectionTimeout=120000
-product.datasource.username="sa"
-product.datasource.password=""
-product.jpa.database-platform=org.hibernate.dialect.H2Dialect
-# !!!!! IMPORTANT, KEEP TO "none" for non-memory databases such as ORACLE, MYSQL, etc.
-# Otherwise all the tables can be dropped or deleted. Can use update for H2.
+product.datasource.connectionTimeout=${?DB_CONNECTION_TIMEOUT}
+product.datasource.maximumPoolSize=${?DB_MAXIMUM_POOL_SIZE}
+product.jpa.database-platform=${?DB_DIALECT}
 product.jpa.hibernate.ddl-auto=update
-
+product.jpa.hibernate.ddl-auto=${?DB_DDL_AUTO}
+product.jpa.hibernate.use-new-id-generator-mappings=${?DB_USE_NEW_ID_GENERATOR_MAPPINGS}
+product.hibernate.show-sql=false
 
 ##################################################################
-# SUBSTANCE API CONFIGURATION BEGIN                             ##
+# API SETTINGS                                                  ##
 ##################################################################
 
 # need to reconsider this a bit
 substanceAPI.BaseUrl="http://localhost:8080/"
+substanceAPI.BaseUrl=${?API_URL}
 
 # NEED THIS for Substance API, Substance dependencies gsrs-module-substances-api
-gsrs.microservice.substances.api.baseURL="http://localhost:8081/"
+gsrs.microservice.substances.api.baseURL=${substanceAPI.BaseUrl}"substances"
+gsrs.microservice.substances.api.baseURL=${?MS_URL_SUBSTANCES}
 
 # Substance API Substance Key Type, choose one (UUID, APPROVAL_ID, or BDNUM)
 substance.linking.keyType.productKeyType="UUID"
@@ -81,8 +100,6 @@ substance.linking.keyType.productKeyType="UUID"
 # Choose one (api or entitymanager) to use Substance API or Substance Entity Manager for ProductSubstanceIndexValueMaker
 substance.product.ivm.substancekey.resolver.touse="entitymanager"
 
-# ***** SUBSTANCE API CONFIGURATION END ******
-
 
 ##################################################################
 # CONFIGURATIONS VALIDATORS, PROCESSORS, INDEXERS, EXPORT, etc  ##
@@ -99,12 +116,12 @@ gsrs.validators.products = [
 gsrs.entityprocessors = [
     {
         "class" = "gov.hhs.gsrs.products.product.models.Product",
-	    "processor" = "gov.hhs.gsrs.products.product.processors.ProductProcessor"
+        "processor" = "gov.hhs.gsrs.products.product.processors.ProductProcessor"
     }
 ]
 
 # NEED THIS TO AVOID CVApi ERROR
-gsrs.entityprocessors = []
+gsrs.entityProcessors = []
 
 ix.ginas.export.factories.products = [
     "gov.hhs.gsrs.products.product.exporters.ProductExporterFactory",
@@ -117,3 +134,23 @@ gsrs.indexers.list=[
         "class" = "gov.hhs.gsrs.products.product.models.Product"
     }
 ]
+
+##################################################################
+# LEGACY AUTHENTICATION                                         ##
+##################################################################
+
+ix.authentication.allownonauthenticated = ${?AUTH_ALLOW_NONAUTH}
+ix.authentication.autoregister = ${?AUTH_AUTOREGISTER}
+ix.authentication.autoregisteractive = ${?AUTH_AUTOREGISTERACTIVE}
+ix.authentication.sysadmin-email = ${?AUTH_SYSADMIN_EMAIL}
+ix.authentication.trustheader = ${?AUTH_TRUST_HEADER}
+ix.authentication.usernameheader = ${?AUTH_USERNAME_HEADER}
+ix.authentication.useremailheader = ${?AUTH_EMAIL_HEADER}
+ix.authentication.userrolesheader = ${?AUTH_ROLES_HEADER}
+
+##################################################################
+# CUSTOM CONFIGURATION                                          ##
+##################################################################
+
+include "conf/products.conf"
+include "products.conf"
diff --git a/products/src/main/webapp/META-INF/context.xml b/products/src/main/webapp/META-INF/context.xml
new file mode 100644
index 0000000..1951bdc
--- /dev/null
+++ b/products/src/main/webapp/META-INF/context.xml
@@ -0,0 +1,6 @@
+<Context docBase="products">
+    <Valve className="org.apache.catalina.valves.RemoteAddrValve" allow="${gateway.allow.pattern:-\d+\.\d+\.\d+\.\d+}"/>
+    <Resources allowLinking="true" className="org.apache.catalina.webresources.StandardRoot">
+        <PreResources className="org.apache.catalina.webresources.DirResourceSet" base="${user.dir}/conf" internalPath="/" webAppMount="/WEB-INF/classes" />
+    </Resources>
+</Context>
diff --git a/ssg4m/src/main/resources/application.conf b/ssg4m/src/main/resources/application.conf
index b1a1bd3..84037df 100644
--- a/ssg4m/src/main/resources/application.conf
+++ b/ssg4m/src/main/resources/application.conf
@@ -1,60 +1,92 @@
 include "ssg4-core.conf"
 
-# need to reconsider this a bit
-substanceAPI.BaseUrl="http://localhost:8080/" 
+##################################################################
+# MAIN CONFIGURATION                                            ##
+##################################################################
 
-server.port=8088
-gsrs.loopback.port=8081
+spring.application.name="ssg4m"
+server.servlet.context-path="/"${spring.application.name}
+ix.home=${spring.application.name}".ix"
+ix.home=${?IX_HOME}
+ix.home_substances="substances.ix"
+ix.home_substances=${?IX_HOME___SUBSTANCES}
 
-ix.home="ginas.ix"
+application.host="http://localhost:8080"
+application.host=${?APPLICATION_HOST}
 
-ix.home= ${?IX_HOME}
-application.host= ${?GATEWAY_HOST}
-spring.application.name="ssg4m"
-#this is what it registers under eureka
-eureka.instance.hostname="ssg4m"
+# Secure session off for dev, but if using HTTPS it's better to have it on
+gsrs.sessions.sessionSecure=false
 
-#turn off eureka for now
-eureka.client.enabled=false
-eureka.client.enable=false
+# Since this currently extends substances, we must turn off molwitch
+# or else need to implement it
+gsrs.substances.molwitch.enabled=false
+
+# PUT YOUR PERSONAL EXTENSIONS AND ADDITIONS HERE
+#debug=true
+spring.main.allow-bean-definition-overriding=true
 
 ##################################################################
 # SPRING BOOT ACTUATOR SETTINGS FOR MICROSERVICE HEALTH CHECKS  ##
 ##################################################################
+
 # turn off rabbit mq check for now since we don't use it otherwise it wil say we ar down
 management.health.rabbit.enabled: false
 
-# PUT YOUR PERSONAL EXTENSIONS AND ADDITIONS HERE
-#debug=true
-spring.main.allow-bean-definition-overriding=true
-
-#this is how HOCON does default values
-eureka.client.serviceUrl.defaultZone= "http://localhost:8761/eureka"
-eureka.client.serviceUrl.defaultZone= ${?EUREKA_SERVER}
+##################################################################
+# EUREKA SETTINGS                                               ##
+##################################################################
 
-ix.h2 {
-        base = ./${ix.home}/h2
-      }
+eureka.instance.hostname=${spring.application.name}
+eureka.client.serviceUrl.defaultZone="http://localhost:8761/eureka"
+eureka.client.serviceUrl.defaultZone=${?EUREKA_SERVICE_URL}
+#turn off eureka for now
+eureka.client.enabled=false
+eureka.client.enabled=${?EUREKA_CLIENT_ENABLED}
 
 ##################################################################
-# DATABASE CONNECTION                                           ##
+# SUBSTANCES DATABASE CONNECTION                                ##
 ##################################################################
-# H2 Database Connection
-spring.datasource.url="jdbc:h2:file:./ginas.ix/h2/ssg4m;AUTO_SERVER=TRUE"
-spring.datasource.driverClassName="org.h2.Driver"
-spring.datasource.username="sa"
-spring.datasource.password=""
-spring.datasource.connectionTimeout=120000
-spring.jpa.database-platform="org.hibernate.dialect.H2Dialect"
-spring.jpa.generate-ddl=false
-# Hibernate ddl auto (none, create, create-drop, validate, update).
-# !!!!! IMPORTANT, KEEP TO "none" for non-memory databases such as ORACLE, MARIADB, POSTGRESQL, MYSQL, etc.
-# Otherwise all the tables can be dropped or deleted
-spring.jpa.hibernate.ddl-auto=update
 
+spring.datasource.url="jdbc:h2:file:"${ix.home_substances}"/h2/sprinxight;AUTO_SERVER=TRUE"
+spring.datasource.url=${?DB_URL}
+spring.datasource.url=${?DB_URL_SUBSTANCES}
+spring.datasource.username=${?DB_USERNAME}
+spring.datasource.password=${?DB_PASSWORD}
+spring.datasource.connectionTimeout=120000
+spring.datasource.connectionTimeout=${?DB_CONNECTION_TIMEOUT}
+spring.datasource.maximumPoolSize=${?DB_MAXIMUM_POOL_SIZE}
+spring.jpa.database-platform=${?DB_DIALECT}
+spring.jpa.hibernate.ddl-auto=none
+spring.jpa.hibernate.use-new-id-generator-mappings=${?DB_USE_NEW_ID_GENERATOR_MAPPINGS}
 spring.hibernate.show-sql=false
 
-# !!!!! IMPORTANT, KEEP TO "none" for non-memory databases such as ORACLE, MYSQL, etc.
-# Otherwise all the tables can be dropped or deleted
-# spring.jpa.hibernate.ddl-auto=none
+##################################################################
+# API SETTINGS                                                  ##
+##################################################################
+
+substanceAPI.BaseUrl="http://localhost:8080/"
+substanceAPI.BaseUrl=${?API_URL}
+
+##################################################################
+# CONFIGURATIONS VALIDATORS, PROCESSORS, EXPORT, etc            ##
+##################################################################
+
+##################################################################
+# LEGACY AUTHENTICATION                                         ##
+##################################################################
+
+ix.authentication.allownonauthenticated = ${?AUTH_ALLOW_NONAUTH}
+ix.authentication.autoregister = ${?AUTH_AUTOREGISTER}
+ix.authentication.autoregisteractive = ${?AUTH_AUTOREGISTERACTIVE}
+ix.authentication.sysadmin-email = ${?AUTH_SYSADMIN_EMAIL}
+ix.authentication.trustheader = ${?AUTH_TRUST_HEADER}
+ix.authentication.usernameheader = ${?AUTH_USERNAME_HEADER}
+ix.authentication.useremailheader = ${?AUTH_EMAIL_HEADER}
+ix.authentication.userrolesheader = ${?AUTH_ROLES_HEADER}
+
+##################################################################
+# CUSTOM CONFIGURATION                                          ##
+##################################################################
 
+include "conf/ssg4m.conf"
+include "ssg4m.conf"
diff --git a/ssg4m/src/main/webapp/META-INF/context.xml b/ssg4m/src/main/webapp/META-INF/context.xml
new file mode 100644
index 0000000..97fedea
--- /dev/null
+++ b/ssg4m/src/main/webapp/META-INF/context.xml
@@ -0,0 +1,6 @@
+<Context docBase="ssg4m">
+    <Valve className="org.apache.catalina.valves.RemoteAddrValve" allow="${gateway.allow.pattern:-\d+\.\d+\.\d+\.\d+}"/>
+    <Resources allowLinking="true" className="org.apache.catalina.webresources.StandardRoot">
+        <PreResources className="org.apache.catalina.webresources.DirResourceSet" base="${user.dir}/conf" internalPath="/" webAppMount="/WEB-INF/classes" />
+    </Resources>
+</Context>
diff --git a/substances/src/main/resources/application.conf b/substances/src/main/resources/application.conf
index 40c9131..41aca6b 100644
--- a/substances/src/main/resources/application.conf
+++ b/substances/src/main/resources/application.conf
@@ -1,46 +1,99 @@
 include "substances-core.conf"
 
-application.host="http://localhost:8081"
-ix.home="ginas.ix"
+##################################################################
+# MAIN CONFIGURATION                                            ##
+##################################################################
 
 spring.application.name="substances"
+server.servlet.context-path="/"${spring.application.name}
+ix.home=${spring.application.name}".ix"
 
-##################################################################
-# SPRING BOOT ACTUATOR SETTINGS FOR MICROSERVICE HEALTH CHECKS  ##
-##################################################################
-# turn off rabbit mq check for now since we don't use it otherwise it will say we are down
-management.health.rabbit.enabled: false
+application.host="http://localhost:8080"
+application.host=${?APPLICATION_HOST}
 
-server.port=8080
-ix.ginas.approvalIdGenerator.generatorClass="ix.ginas.utils.UNIIGenerator"
+# Secure session off for dev, but if using HTTPS it's better to have it on
+gsrs.sessions.sessionSecure=false
+
+gsrs.substances.molwitch.enabled=true
 
 # PUT YOUR PERSONAL EXTENSIONS AND ADDITIONS HERE
 #debug=true
 spring.main.allow-bean-definition-overriding=true
 
-#this is how HOCON does default values
-#eureka.client.serviceUrl.defaultZone= "http://localhost:8761/eureka"
+# export path
+ix.ginas.export.path = "./exports"
+
+# maximum file upload size
+spring.servlet.multipart.max-file-size=512MB
+spring.servlet.multipart.max-request-size=512MB
+
+##################################################################
+# SPRING BOOT ACTUATOR SETTINGS FOR MICROSERVICE HEALTH CHECKS  ##
+##################################################################
+
+# turn off rabbit mq check for now since we don't use it otherwise it wil say we ar down
+management.health.rabbit.enabled: false
+
+##################################################################
+# EUREKA SETTINGS                                               ##
+##################################################################
+
+eureka.instance.hostname=${spring.application.name}
+eureka.client.serviceUrl.defaultZone="http://localhost:8761/eureka"
+eureka.client.serviceUrl.defaultZone=${?EUREKA_SERVICE_URL}
+#turn off eureka for now
 eureka.client.enabled=false
+eureka.client.enabled=${?EUREKA_CLIENT_ENABLED}
+
+##################################################################
+# DATABASE CONNECTION                                           ##
+##################################################################
 
 ix.h2 {
         base = ./${ix.home}/h2
       }
-spring.datasource.url="jdbc:h2:"${ix.h2.base}"/sprinxight;AUTO_SERVER=TRUE"
-spring.datasource.driverClassName=org.h2.Driver
+
+spring.datasource.url="jdbc:h2:"${ix.h2.base}"/appinxight;AUTO_SERVER=TRUE"
+spring.datasource.url=${?DB_URL}
+spring.datasource.url=${?DB_URL_SUBSTANCES}
+spring.datasource.username=${?DB_USERNAME}
+spring.datasource.password=${?DB_PASSWORD}
 spring.datasource.connectionTimeout=120000
+spring.datasource.connectionTimeout=${?DB_CONNECTION_TIMEOUT}
 spring.datasource.maximumPoolSize=50
-spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
+spring.datasource.maximumPoolSize=${?DB_MAXIMUM_POOL_SIZE}
+spring.datasource.maximumPoolSize=${?DB_MAXIMUM_POOL_SIZE_SUBSTANCES}
+spring.jpa.database-platform=${?DB_DIALECT}
 spring.jpa.hibernate.ddl-auto=update
+spring.jpa.hibernate.ddl-auto=${?DB_DDL_AUTO}
+spring.jpa.hibernate.use-new-id-generator-mappings=${?DB_USE_NEW_ID_GENERATOR_MAPPINGS}
+spring.hibernate.show-sql=false
 
-# NEED THIS for Applications-api, Products-api and ClinicalTrialsUS/Europe-Api
-gsrs.microservice.applications.api.baseURL="http://localhost:8081/"
-gsrs.microservice.products.api.baseURL="http://localhost:8081/"
-gsrs.microservice.clinicaltrialsus.api.baseURL="http://localhost:8081/"
-gsrs.microservice.clinicaltrialseurope.api.baseURL="http://localhost:8081/"
+##################################################################
+# API SETTINGS                                                  ##
+##################################################################
 
+substanceAPI.BaseUrl="http://localhost:8080/"
+substanceAPI.BaseUrl=${?API_URL}
+gsrs.microservice.applications.api.baseURL=${substanceAPI.BaseUrl}"applications"
+gsrs.microservice.applications.api.baseURL=${?MS_URL_APPLICATIONS}
+gsrs.microservice.clinicaltrialsus.api.baseURL=${substanceAPI.BaseUrl}"clinical-trials"
+gsrs.microservice.clinicaltrialsus.api.baseURL=${?MS_URL_CLINICAL_TRIALS}
+gsrs.microservice.clinicaltrialsus.api.baseURL=${?MS_URL_CLINICAL_TRIALS_US}
+gsrs.microservice.clinicaltrialseurope.api.baseURL=${substanceAPI.BaseUrl}"clinical-trials"
+gsrs.microservice.clinicaltrialseurope.api.baseURL=${?MS_URL_CLINICAL_TRIALS}
+gsrs.microservice.clinicaltrialseurope.api.baseURL=${?MS_URL_CLINICAL_TRIALS_EUROPE}
+gsrs.microservice.products.api.baseURL=${substanceAPI.BaseUrl}"products"
+gsrs.microservice.products.api.baseURL=${?MS_URL_PRODUCTS}
 
-# Secure session off for dev, but if using HTTPS it's better to have it on
-gsrs.sessions.sessionSecure=false
+##################################################################
+# CONFIGURATIONS VALIDATORS, PROCESSORS, EXPORT, etc            ##
+##################################################################
+
+ix.ginas.approvalIdGenerator.generatorClass="ix.ginas.utils.UNIIGenerator"
+ix.ginas.approvalIdGenerator.generatorClass=${?APPROVALID_GENERATOR}
+ix.ginas.approvalIdGenerator.parameters.name=${?APPROVALID_NAME}
+ix.ginas.approvalIdGenerator.parameters.codeSystem=${?APPROVALID_CODESYSTEM}
 
 # This is configured in substance-core.conf; modify if needed here.
 # Standardize Names in accordance with FDA rules
@@ -56,296 +109,6 @@ gsrs.sessions.sessionSecure=false
 #         }
 # }
 
-ix.ginas.export.settingsPresets.substances= {
-   "PUBLIC_DATA_ONLY": {
-   	"owner":"admin",
-   	"scrubberSettings": {
-   		"removeAllLocked":true
-   	}
-   },
-  "ALL_DATA": {
-    "owner":"admin",
-   	"scrubberSettings":null
-   }
-}
-
-gsrs.importAdapterFactories.substances =
-	[
-		{
-		
-			"adapterName": "SDF Adapter",
-			"importAdapterFactoryClass": "gsrs.module.substance.importers.SDFImportAdapterFactory",
-			"stagingAreaServiceClass": "gsrs.stagingarea.service.DefaultStagingAreaService",
-			"entityServiceClass" :"gsrs.dataexchange.SubstanceStagingAreaEntityService",
-			"description" : "SD file importer for general users",
-			"supportedFileExtensions": [
-				"sdf",
-				"sd",
-				"sdfile"
-			],
-			
-			"parameters": {
-			#the things used to instantiate a thing used to do the import
-			
-				"fileImportActions": [
-				##list of available actions for user to select from
-				#each action takes in a file record + a substance record to update substance record with data from file
-				{
-						"actionClass": "gsrs.module.substance.importers.importActionFactories.NameExtractorActionFactory",
-						"fields": [
-							{
-								"fieldName": "Name",
-								"fieldLabel": "Substance Name",
-								"defaultValue": null,
-								"fieldType": "java.lang.String",
-								"expectedToChange": true,
-								"required": true,
-								"lookupKey": null
-							},
-							{
-								"fieldName": "nameType",
-								"fieldLabel": "Name Type",
-								"defaultValue": "cn",
-								"cv": "name_type",
-								"fieldType": "java.lang.String",
-								"expectedToChange": true,
-								"required": false,
-								"lookupKey": null
-							},
-							{
-								"fieldName": "displayName",
-								"fieldLabel": "Display Name?",
-								"defaultValue": false,
-								"fieldType": "java.lang.Boolean",
-								"expectedToChange": true,
-								"required": false,
-								"lookupKey": null
-							}
-						],
-						"parameters": {
-							"lang": "en"
-						},
-						"actionName": "common_name",
-						"label":"Create Name"
-					},
-					{
-						"actionName": "code_import",
-						"label":"Create Code",
-						"actionClass": "gsrs.module.substance.importers.importActionFactories.CodeExtractorActionFactory",
-						"fields": [
-							{
-								"fieldName": "code",
-								"fieldLabel": "Code/Identifier",
-								"defaultValue": null,
-								"fieldType": "java.lang.String",
-								"expectedToChange": true,
-								"required": true,
-								"lookupKey": null
-							},
-							{
-								"fieldName": "codeType",
-								"fieldLabel": "Primary or Alternative",
-								"defaultValue": "PRIMARY",
-								"fieldType": "java.lang.String",
-								"expectedToChange": true,
-								"required": false,
-								"lookupKey": null
-							},
-							{
-								"fieldName": "codeSystem",
-								"fieldLabel": "Code System",
-								"defaultValue": null,
-								"fieldType": "java.lang.String",
-								"expectedToChange": true,
-								"required": true,
-								"lookupKey": null
-							}
-						],
-						"parameters": {
-						}
-					},
-					{
-						"actionClass": "gsrs.module.substance.importers.importActionFactories.NSRSCustomCodeExtractorActionFactory",
-						"fields": [
-							{
-								"fieldName": "code",
-								"fieldLabel": "NSC Number",
-								"defaultValue": null,
-								"fieldType": "java.lang.String",
-								"expectedToChange": true,
-								"required": true,
-								"lookupKey": null
-							},
-							{
-								"fieldName": "codeType",
-								"fieldLabel": "Primary or Alternative",
-								"defaultValue": "PRIMARY",
-								"fieldType": "java.lang.String",
-								"expectedToChange": true,
-								"required": false,
-								"lookupKey": null
-							}
-						],
-						"parameters": {
-							"codeSystem": "NSC"
-						},
-						"actionName": "nci_import",
-						"label":"Create NSC Code"
-					},
-					{
-						"actionClass": "gsrs.module.substance.importers.importActionFactories.StructureExtractorActionFactory",
-						"fields": [
-							{
-								"fieldName": "molfile",
-								"fieldLabel": "Structure",
-								"defaultValue": null,
-								"fieldType": "java.lang.String",
-								"expectedToChange": true,
-								"required": true,
-								"lookupKey": null
-							}
-						],
-						"parameters": {
-
-						},
-						"actionName": "structure_and_moieties",
-						"label":"Create Structure"
-					},
-					{
-						"actionClass": "gsrs.module.substance.importers.importActionFactories.PropertyExtractorActionFactory",
-						"fields": [
-							{
-								"fieldName": "name",
-								"fieldLabel": "Name",
-								"defaultValue": null,
-								"fieldType": "java.lang.String",
-								"expectedToChange": true,
-								"required": true,
-								"lookupKey": null
-							},
-							{
-								"fieldName": "propertyType",
-								"fieldLabel": "Property Type",
-								"defaultValue": "chemical",
-								"fieldType": "java.lang.String",
-								"expectedToChange": true,
-								"required": false,
-								"lookupKey": null
-							},
-							{
-								"fieldName": "valueAverage",
-								"fieldLabel": "Average Value",
-								"defaultValue": null,
-								"fieldType": "java.lang.Double",
-								"expectedToChange": true,
-								"required": false,
-								"lookupKey": null
-							},
-							{
-								"fieldName": "valueNonNumeric",
-								"fieldLabel": "Non-numeric Value",
-								"defaultValue": null,
-								"fieldType": "java.lang.String",
-								"expectedToChange": true,
-								"required": false,
-								"lookupKey": null
-							},
-							{
-								"fieldName": "valueUnits",
-								"fieldLabel": "Units",
-								"defaultValue": null,
-								"fieldType": "java.lang.String",
-								"expectedToChange": true,
-								"required": false,
-								"lookupKey": null
-							}
-						],
-						"parameters": {
-						},
-						"actionName": "property_import",
-						"label":"Create Chemical Property"
-					},
-					{
-						"actionClass": "gsrs.module.substance.importers.importActionFactories.ReferenceExtractorActionFactory",
-						"fields": [
-							{
-								"fieldName": "docType",
-								"fieldLabel": "Type",
-								"defaultValue": "OTHER",
-								"fieldType": "java.lang.String",
-								"expectedToChange": true,
-								"required": true,
-								"lookupKey": null
-							},
-							{
-								"fieldName": "citation",
-								"fieldLabel": "Reference",
-								"defaultValue": "{INSERT REFERENCE CITATION HERE}",
-								"fieldType": "java.lang.String",
-								"expectedToChange": true,
-								"required": false,
-								"lookupKey": null
-							}
-						],
-						"parameters": {
-							
-						},
-						"actionName": "public_reference",
-						"label":"Create Reference"
-					},
-					{
-						"actionClass": "gsrs.module.substance.importers.importActionFactories.NotesExtractorActionFactory",
-						"fields": [
-							{
-								"fieldName": "note",
-								"fieldLabel": "Note",
-								"defaultValue": null,
-								"fieldType": "java.lang.String",
-								"expectedToChange": true,
-								"required": true,
-								"lookupKey": null
-							}
-						],
-						"parameters": {
-						},
-						"actionName": "note_import",
-						"label":"Create Note"
-					},
-					{
-						"actionClass": "gsrs.module.substance.importers.importActionFactories.NoOpActionFactory",
-						"fields": [
-						{
-								"fieldName": "fieldName",
-								"fieldLabel": "Field to ignore",
-								"fieldType": "java.lang.String",
-								"expectedToChange": true,
-								"lookupKey": null
-							}
-						],
-						"parameters": {
-						},
-						"actionName": "no-op",
-						"label":"Omit this field"
-					}
-				]
-			}
-		},
-		{
-			"adapterName": "GSRS JSON Adapter",
-			"importAdapterFactoryClass": "gsrs.module.substance.importers.GSRSJSONImportAdapterFactory",
-			"stagingAreaServiceClass": "gsrs.stagingarea.service.DefaultStagingAreaService",
-			"entityServiceClass" :"gsrs.dataexchange.SubstanceStagingAreaEntityService",
-			"description" : "GSRS legacy JSON file importer",
-			#extensions belong here because they can override the default set within the class
-			"supportedFileExtensions": [
-				"gsrs",
-				"gz"
-			],
-			"parameters": {
-			}
-		}
-	]
-
 ## Add after StandardNameValidator
 # gsrs.validators.substances += {
 #         "validatorClass" = "ix.ginas.utils.validation.validators.StandardNameDuplicateValidator",
@@ -362,30 +125,313 @@ gsrs.importAdapterFactories.substances =
 # In FDA's case:
 # No automatic addition in tags found in names to explicit tag list.
 # No automatic deletion of explicit tags missing from bracketed terms.
-# Warnings off for bracket name missing from tags; warning on for explicit tag missing from names. 
+# Warnings off for bracket name missing from tags; warning on for explicit tag missing from names.
 # gsrs.validators.substances += {
-#    "validatorClass" = "ix.ginas.utils.validation.validators.tags.TagsValidator",
-#    "newObjClass" = "ix.ginas.models.v1.Substance",
-#    "parameters" = {
-#        "checkExplicitTagsExtractedFromNames": false,
-#        "checkExplicitTagsMissingFromNames": true,
-#        "addExplicitTagsExtractedFromNamesOnCreate": false,
-#        "addExplicitTagsExtractedFromNamesOnUpdate": false,
-#        "removeExplicitTagsMissingFromNamesOnCreate": false,
-#        "removeExplicitTagsMissingFromNamesOnUpdate": false
-#    }
-# }
+#   "validatorClass" = "ix.ginas.utils.validation.validators.tags.TagsValidator",
+#   "newObjClass" = "ix.ginas.models.v1.Substance",
+#   "parameters" = {
+#       "checkExplicitTagsExtractedFromNames": false,
+#       "checkExplicitTagsMissingFromNames": true,
+#       "addExplicitTagsExtractedFromNamesOnCreate": false,
+#       "addExplicitTagsExtractedFromNamesOnUpdate": false,
+#       "removeExplicitTagsMissingFromNamesOnCreate": false,
+#       "removeExplicitTagsMissingFromNamesOnUpdate": false
+#   }
+#}
+
+ix.ginas.export.settingsPresets.substances= {
+    "PUBLIC_DATA_ONLY": {
+        "owner":"admin",
+        "scrubberSettings": {
+            "removeAllLocked":true
+        }
+    },
+    "ALL_DATA": {
+        "owner":"admin",
+        "scrubberSettings":null
+    }
+}
+
+gsrs.importAdapterFactories.substances = [
+    {
+        "adapterName": "SDF Adapter",
+        "importAdapterFactoryClass": "gsrs.module.substance.importers.SDFImportAdapterFactory",
+        "stagingAreaServiceClass": "gsrs.stagingarea.service.DefaultStagingAreaService",
+        "entityServiceClass" :"gsrs.dataexchange.SubstanceStagingAreaEntityService",
+        "description" : "SD file importer for general users",
+        "supportedFileExtensions": [
+            "sdf",
+            "sd",
+            "sdfile"
+        ],
+        "parameters": {
+            #the things used to instantiate a thing used to do the import
+            "fileImportActions": [
+                ##list of available actions for user to select from
+                #each action takes in a file record + a substance record to update substance record with data from file
+                {
+                    "actionClass": "gsrs.module.substance.importers.importActionFactories.NameExtractorActionFactory",
+                    "fields": [
+                        {
+                        "fieldName": "Name",
+                        "fieldLabel": "Substance Name",
+                        "defaultValue": null,
+                        "fieldType": "java.lang.String",
+                        "expectedToChange": true,
+                            "required": true,
+                            "lookupKey": null
+                        },
+                        {
+                            "fieldName": "nameType",
+                            "fieldLabel": "Name Type",
+                            "defaultValue": "cn",
+                            "cv": "name_type",
+                            "fieldType": "java.lang.String",
+                            "expectedToChange": true,
+                            "required": false,
+                            "lookupKey": null
+                        },
+                        {
+                            "fieldName": "displayName",
+                            "fieldLabel": "Display Name?",
+                            "defaultValue": false,
+                            "fieldType": "java.lang.Boolean",
+                            "expectedToChange": true,
+                            "required": false,
+                            "lookupKey": null
+                        }
+                    ],
+                    "parameters": {
+                        "lang": "en"
+                    },
+                    "actionName": "common_name",
+                    "label":"Create Name"
+                },
+                {
+                    "actionName": "code_import",
+                    "label":"Create Code",
+                    "actionClass": "gsrs.module.substance.importers.importActionFactories.CodeExtractorActionFactory",
+                    "fields": [
+                        {
+                            "fieldName": "code",
+                            "fieldLabel": "Code/Identifier",
+                            "defaultValue": null,
+                            "fieldType": "java.lang.String",
+                            "expectedToChange": true,
+                            "required": true,
+                            "lookupKey": null
+                        },
+                        {
+                            "fieldName": "codeType",
+                            "fieldLabel": "Primary or Alternative",
+                            "defaultValue": "PRIMARY",
+                            "fieldType": "java.lang.String",
+                            "expectedToChange": true,
+                            "required": false,
+                            "lookupKey": null
+                        },
+                        {
+                            "fieldName": "codeSystem",
+                            "fieldLabel": "Code System",
+                            "defaultValue": null,
+                            "fieldType": "java.lang.String",
+                            "expectedToChange": true,
+                            "required": true,
+                            "lookupKey": null
+                        }
+                    ],
+                    "parameters": {
+                    }
+                },
+                {
+                    "actionClass": "gsrs.module.substance.importers.importActionFactories.NSRSCustomCodeExtractorActionFactory",
+                    "fields": [
+                        {
+                            "fieldName": "code",
+                            "fieldLabel": "NSC Number",
+                            "defaultValue": null,
+                            "fieldType": "java.lang.String",
+                            "expectedToChange": true,
+                            "required": true,
+                            "lookupKey": null
+                        },
+                        {
+                            "fieldName": "codeType",
+                            "fieldLabel": "Primary or Alternative",
+                            "defaultValue": "PRIMARY",
+                            "fieldType": "java.lang.String",
+                            "expectedToChange": true,
+                            "required": false,
+                            "lookupKey": null
+                        }
+                    ],
+                    "parameters": {
+                        "codeSystem": "NSC"
+                    },
+                    "actionName": "nci_import",
+                    "label":"Create NSC Code"
+                },
+                {
+                    "actionClass": "gsrs.module.substance.importers.importActionFactories.StructureExtractorActionFactory",
+                    "fields": [
+                        {
+                            "fieldName": "molfile",
+                            "fieldLabel": "Structure",
+                            "defaultValue": null,
+                            "fieldType": "java.lang.String",
+                            "expectedToChange": true,
+                            "required": true,
+                            "lookupKey": null
+                        }
+                    ],
+                    "parameters": {
+                    },
+                    "actionName": "structure_and_moieties",
+                    "label":"Create Structure"
+                },
+                {
+                    "actionClass": "gsrs.module.substance.importers.importActionFactories.PropertyExtractorActionFactory",
+                    "fields": [
+                        {
+                            "fieldName": "name",
+                            "fieldLabel": "Name",
+                            "defaultValue": null,
+                            "fieldType": "java.lang.String",
+                            "expectedToChange": true,
+                            "required": true,
+                            "lookupKey": null
+                        },
+                        {
+                            "fieldName": "propertyType",
+                            "fieldLabel": "Property Type",
+                            "defaultValue": "chemical",
+                            "fieldType": "java.lang.String",
+                            "expectedToChange": true,
+                            "required": false,
+                            "lookupKey": null
+                        },
+                        {
+                            "fieldName": "valueAverage",
+                            "fieldLabel": "Average Value",
+                            "defaultValue": null,
+                            "fieldType": "java.lang.Double",
+                            "expectedToChange": true,
+                            "required": false,
+                            "lookupKey": null
+                        },
+                        {
+                            "fieldName": "valueNonNumeric",
+                            "fieldLabel": "Non-numeric Value",
+                            "defaultValue": null,
+                            "fieldType": "java.lang.String",
+                            "expectedToChange": true,
+                            "required": false,
+                            "lookupKey": null
+                        },
+                        {
+                            "fieldName": "valueUnits",
+                            "fieldLabel": "Units",
+                            "defaultValue": null,
+                            "fieldType": "java.lang.String",
+                            "expectedToChange": true,
+                            "required": false,
+                            "lookupKey": null
+                        }
+                    ],
+                    "parameters": {
+                    },
+                    "actionName": "property_import",
+                    "label":"Create Chemical Property"
+                },
+                {
+                    "actionClass": "gsrs.module.substance.importers.importActionFactories.ReferenceExtractorActionFactory",
+                    "fields": [
+                        {
+                            "fieldName": "docType",
+                            "fieldLabel": "Type",
+                            "defaultValue": "OTHER",
+                            "fieldType": "java.lang.String",
+                            "expectedToChange": true,
+                            "required": true,
+                            "lookupKey": null
+                        },
+                        {
+                            "fieldName": "citation",
+                            "fieldLabel": "Reference",
+                            "defaultValue": "{INSERT REFERENCE CITATION HERE}",
+                            "fieldType": "java.lang.String",
+                            "expectedToChange": true,
+                            "required": false,
+                            "lookupKey": null
+                        }
+                    ],
+                    "parameters": {
+                    },
+                    "actionName": "public_reference",
+                    "label":"Create Reference"
+                },
+                {
+                    "actionClass": "gsrs.module.substance.importers.importActionFactories.NotesExtractorActionFactory",
+                    "fields": [
+                        {
+                            "fieldName": "note",
+                            "fieldLabel": "Note",
+                            "defaultValue": null,
+                            "fieldType": "java.lang.String",
+                            "expectedToChange": true,
+                            "required": true,
+                            "lookupKey": null
+                        }
+                    ],
+                    "parameters": {
+                    },
+                    "actionName": "note_import",
+                    "label":"Create Note"
+                },
+                {
+                    "actionClass": "gsrs.module.substance.importers.importActionFactories.NoOpActionFactory",
+                    "fields": [
+                    {
+                            "fieldName": "fieldName",
+                            "fieldLabel": "Field to ignore",
+                            "fieldType": "java.lang.String",
+                            "expectedToChange": true,
+                            "lookupKey": null
+                        }
+                    ],
+                    "parameters": {
+                    },
+                    "actionName": "no-op",
+                    "label":"Omit this field"
+                }
+            ]
+        }
+    },
+    {
+        "adapterName": "GSRS JSON Adapter",
+        "importAdapterFactoryClass": "gsrs.module.substance.importers.GSRSJSONImportAdapterFactory",
+        "stagingAreaServiceClass": "gsrs.stagingarea.service.DefaultStagingAreaService",
+        "entityServiceClass" :"gsrs.dataexchange.SubstanceStagingAreaEntityService",
+        "description" : "GSRS legacy JSON file importer",
+        #extensions belong here because they can override the default set within the class
+        "supportedFileExtensions": [
+            "gsrs",
+            "gz"
+        ],
+        "parameters": {
+        }
+    }
+]
 
 gsrs.defaultStagingAreaServiceClass.substances = gsrs.stagingarea.service.DefaultStagingAreaService
 gsrs.defaultStagingAreaEntityService.substances = gsrs.dataexchange.SubstanceStagingAreaEntityService
-gsrs.availableProcessActions.substances = ["gsrs.dataexchange.processingactions.CreateProcessingAction", 
-	"gsrs.dataexchange.processingactions.MergeProcessingAction", 
-	"gsrs.dataexchange.processingactions.RejectProcessingAction", 
-	"gsrs.dataexchange.processingactions.CreateBatchProcessingAction",
-	"gsrs.dataexchange.processingactions.ScrubProcessingAction"]
-
-gsrs.matchableCalculators.substances =
-[
+gsrs.availableProcessActions.substances = ["gsrs.dataexchange.processingactions.CreateProcessingAction",
+    "gsrs.dataexchange.processingactions.MergeProcessingAction",
+    "gsrs.dataexchange.processingactions.RejectProcessingAction",
+    "gsrs.dataexchange.processingactions.CreateBatchProcessingAction",
+    "gsrs.dataexchange.processingactions.ScrubProcessingAction"]
+
+gsrs.matchableCalculators.substances = [
     {"matchableCalculationClass" : "gsrs.dataexchange.extractors.CASNumberMatchableExtractor",
         "config" :{
             "casCodeSystems": ["CAS", "CASNo", "CASNumber"]
@@ -395,8 +441,7 @@ gsrs.matchableCalculators.substances =
     {"matchableCalculationClass" : "gsrs.dataexchange.extractors.ApprovalIdMatchableExtractor","config" :{}},
     {"matchableCalculationClass" : "gsrs.dataexchange.extractors.DefinitionalHashMatchableExtractor","config" :{}},
     {"matchableCalculationClass" : "gsrs.dataexchange.extractors.SelectedCodesMatchableExtractor",
-        "config" :
-        {
+        "config" :{
             "codeSystems" :["CAS", "ChemBL", "NCI", "NSC", "EINECS"]
         }
     },
@@ -420,9 +465,28 @@ gsrs.clinicaltrial.ivm.search.max.fetch = "20000"
 gsrs.substance.structures.saltFilePath=salt_data_public.tsv
 
 gsrs.entityProcessors+={
-        "entityClassName": ix.ginas.models.v1.Substance,
-        "processor": "gsrs.dataexchange.processors.CalculateMatchablesProcessor",
-        "with":{
-		}
-   	}
+    "entityClassName": ix.ginas.models.v1.Substance,
+    "processor": "gsrs.dataexchange.processors.CalculateMatchablesProcessor",
+    "with":{
+    }
+}
+
+##################################################################
+# LEGACY AUTHENTICATION                                         ##
+##################################################################
+
+ix.authentication.allownonauthenticated = ${?AUTH_ALLOW_NONAUTH}
+ix.authentication.autoregister = ${?AUTH_AUTOREGISTER}
+ix.authentication.autoregisteractive = ${?AUTH_AUTOREGISTERACTIVE}
+ix.authentication.sysadmin-email = ${?AUTH_SYSADMIN_EMAIL}
+ix.authentication.trustheader = ${?AUTH_TRUST_HEADER}
+ix.authentication.usernameheader = ${?AUTH_USERNAME_HEADER}
+ix.authentication.useremailheader = ${?AUTH_EMAIL_HEADER}
+ix.authentication.userrolesheader = ${?AUTH_ROLES_HEADER}
+
+##################################################################
+# CUSTOM CONFIGURATION                                          ##
+##################################################################
 
+include "conf/substances.conf"
+include "substances.conf"
diff --git a/substances/src/main/resources/codeSystem.json b/substances/src/main/resources/codeSystem.json
index f1f2cc0..0fcaf3a 100644
--- a/substances/src/main/resources/codeSystem.json
+++ b/substances/src/main/resources/codeSystem.json
@@ -31,7 +31,7 @@
     {"codeSystem":"USAN","url":"https://searchusan.ama-assn.org/finder/usan/search/$CODE$/relevant/1/"},
     {"codeSystem":"NSC","url":"https://dtp.cancer.gov/dtpstandard/servlet/dwindex?searchtype=NSC&outputformat=html&searchlist=$CODE$"},
     {"codeSystem":"EPA CompTox","url":"https://comptox.epa.gov/dashboard/chemical/details/$CODE$"},
-    {"codeSystem":"DailyMed","url":"https://dailymed.nlm.nih.gov/dailymed/search.cfm?adv=1&query=($CODE$)"}, 
+    {"codeSystem":"DailyMed","url":"https://dailymed.nlm.nih.gov/dailymed/search.cfm?adv=1&query=($CODE$)"},
     {"codeSystem":"Catalogue of Life","url":"https://www.catalogueoflife.org/data/taxon/$CODE$"},
     {"codeSystem":"POWO","url":"https://powo.science.kew.org/taxon/urn:lsid:ipni.org:names:$CODE$"}
 ]
diff --git a/substances/src/main/webapp/META-INF/context.xml b/substances/src/main/webapp/META-INF/context.xml
new file mode 100644
index 0000000..c5fbbb1
--- /dev/null
+++ b/substances/src/main/webapp/META-INF/context.xml
@@ -0,0 +1,6 @@
+<Context docBase="substances">
+    <Valve className="org.apache.catalina.valves.RemoteAddrValve" allow="${gateway.allow.pattern:-\d+\.\d+\.\d+\.\d+}"/>
+    <Resources allowLinking="true" className="org.apache.catalina.webresources.StandardRoot">
+        <PreResources className="org.apache.catalina.webresources.DirResourceSet" base="${user.dir}/conf" internalPath="/" webAppMount="/WEB-INF/classes" />
+    </Resources>
+</Context>
